<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>REST on The Insane Techie</title>
    <link>https://dhanoopbhaskar.github.io/tags/rest/</link>
    <description>Recent content in REST on The Insane Techie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 22 Aug 2016 20:13:00 +0530</lastBuildDate><atom:link href="https://dhanoopbhaskar.github.io/tags/rest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RESTful Web Services in Java</title>
      <link>https://dhanoopbhaskar.github.io/blog/2016-08-22-restful-web-services-in-java/</link>
      <pubDate>Mon, 22 Aug 2016 20:13:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/blog/2016-08-22-restful-web-services-in-java/</guid>
      <description>Read about REST here&amp;hellip;
In the example program REST is implemented using Jersey Framework.
Download Jersey framework from here&amp;hellip;
I used Dynamic Web Project in Eclipse for coding. Extract jersey zip file and copy all the .jar files from api, ext, lib folders to WebContent/WEB-INF/lib folder.
Employee.java
package in.theinsanetechie.rest; import java.io.Serializable; import javax.xml.bind.annotation.XmlElement; import javax.xml.bind.annotation.XmlRootElement; @XmlRootElement(name = &amp;#34;employee&amp;#34;) public class Employee implements Serializable { private static final long serialVersionUID = 1L; private int empcode; private String name; private String designation; private float basicpay; public Employee() { } public Employee(int empcode, String name, String designation, float basicpay) { super(); this.</description>
    </item>
    
  </channel>
</rss>
