<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software design on The Insane Techie</title>
    <link>https://dhanoopbhaskar.github.io/tags/software-design/</link>
    <description>Recent content in software design on The Insane Techie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 31 Aug 2013 16:29:00 +0530</lastBuildDate>
    
	<atom:link href="https://dhanoopbhaskar.github.io/tags/software-design/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Singleton Pattern</title>
      <link>https://dhanoopbhaskar.github.io/blog/2013-08-31-singleton-pattern/</link>
      <pubDate>Sat, 31 Aug 2013 16:29:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/blog/2013-08-31-singleton-pattern/</guid>
      <description>In software engineering, the singleton pattern is a design pattern that restricts a class from creating more than one object (Instantiation is restricted to one object).Â Such a design is generally used in a software system which operates more efficiently when only one object exists. It is useful when exactly one object is needed to coordinate actions across the system.
Read more about singleton pattern here&amp;hellip;
Java implementation
1. Single Threaded version</description>
    </item>
    
    <item>
      <title>Software Design Pattern</title>
      <link>https://dhanoopbhaskar.github.io/blog/2013-08-31-software-design-pattern/</link>
      <pubDate>Sat, 31 Aug 2013 15:33:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/blog/2013-08-31-software-design-pattern/</guid>
      <description>A software design pattern is a general reusable solution to a commonly occurring problem within a given context in software design. A design pattern is not a finished or completed design. It is actually a description or template for solution to a problem.
 Design patterns are of many types, such as:
 Algorithm strategy patterns Computational design patterns Execution patterns Implementation strategy patterns Structural design patterns  Read more about design patterns here&amp;hellip;</description>
    </item>
    
  </channel>
</rss>