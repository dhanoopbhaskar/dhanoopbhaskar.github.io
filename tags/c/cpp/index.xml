<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C/CPP on The Insane Techie</title>
    <link>https://dhanoopbhaskar.github.io/tags/c/cpp/</link>
    <description>Recent content in C/CPP on The Insane Techie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://dhanoopbhaskar.github.io/tags/c/cpp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DNS Lookup - Implementation in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2016-02-14-dns-lookup-implementation-in-c/</link>
      <pubDate>Sun, 14 Feb 2016 01:23:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2016-02-14-dns-lookup-implementation-in-c/</guid>
      <description>Read about DNS here&amp;hellip;
DNS Lookup - Implementation in C
/**dnsclient.c**/ #include&amp;#34;stdio.h&amp;#34;  #include&amp;#34;stdlib.h&amp;#34;  #include&amp;#34;sys/types.h&amp;#34;  #include&amp;#34;sys/socket.h&amp;#34;  #include&amp;#34;string.h&amp;#34;  #include&amp;#34;netinet/in.h&amp;#34;  #include&amp;#34;netdb.h&amp;#34; #include&amp;#34;arpa/inet.h&amp;#34; #define BUF_SIZE 512  #define SERVER &amp;#34;8.8.8.8&amp;#34;  #define PORT 53  #define WIDTH 16  int createSocket(); void createRequest(char * url); void hexdump (char *desc, void *addr, int len); void lookUp(); struct query { uint16_t length; char * url; unsigned char request[BUF_SIZE]; uint16_t reqType; }; struct query dnsQuery = { .</description>
    </item>
    
    <item>
      <title>Sum of Prime Numbers Between 1000000 and 1000100 Using Sieve of Eratosthenes</title>
      <link>https://dhanoopbhaskar.github.io/posts/2014-12-30-sum-of-prime-numbers-between-1000000-and-1000100-using-sieve-of-eratosthenes/</link>
      <pubDate>Tue, 30 Dec 2014 09:36:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2014-12-30-sum-of-prime-numbers-between-1000000-and-1000100-using-sieve-of-eratosthenes/</guid>
      <description>For more information on Sieve of Eratosthenes please refer wikipedia page
#include &amp;#34;stdio.h&amp;#34; #include &amp;#34;string.h&amp;#34; #include &amp;#34;stdlib.h&amp;#34; #include &amp;#34;assert.h&amp;#34; typedef unsigned long long biggerint; void findPrimeNumbers(biggerint start, biggerint end) { char * primeList = malloc(sizeof(unsigned char) * (end + 1)); int i; biggerint sum = 0; assert(primeList != NULL); /* set prime status */ for (i = 0; i &amp;lt;= end + 1 ; i++) { *(primeList + i) = 1; } primeList[0] = 0; primeList[1] = 0; /* mark all the non-prime numbers */ biggerint currentFactor = 2; biggerint lastSquare = 0; biggerint currentSquare = 0; while (currentFactor * currentFactor &amp;lt;= end) { /* mark all the multiples of the current factor */ biggerint mark = currentFactor + currentFactor; while (mark &amp;lt;= end) { *(primeList + mark) = 0; mark += currentFactor; } /* set currentFactor to next prime number */ currentFactor++; while (*(primeList+currentFactor) == 0) currentFactor++; assert(currentFactor &amp;lt;= end); } for(i = start; i &amp;lt;= end ; i++) { if(*(primeList + i)) sum += i; } free(primeList); printf(&amp;#34;%llu\n&amp;#34;, sum); } int main(int argc, char *argv[]) { biggerint start = 1000000; biggerint end = 1000100; findPrimeNumbers(start, end); return 0; } </description>
    </item>
    
    <item>
      <title>A simple HTTP client and a server in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2014-02-13-a-simple-http-client-and-a-server-in-c/</link>
      <pubDate>Thu, 13 Feb 2014 23:06:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2014-02-13-a-simple-http-client-and-a-server-in-c/</guid>
      <description>The HTTP server sends the files requested by the client, if it is available at the server. The HTTP client uses GET method for requesting files from the server. Only .html, .txt and .pdf files are implemented. On receiving the file, the client program opens it using firefox or gedit or acrobat reader, as per the file type. Note that the given programs were done in Linux (Debian) environment.
httpserver.c</description>
    </item>
    
    <item>
      <title>A simple chat program in C (TCP)</title>
      <link>https://dhanoopbhaskar.github.io/posts/2014-01-22-a-simple-chat-program-in-c-tcp/</link>
      <pubDate>Wed, 22 Jan 2014 20:26:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2014-01-22-a-simple-chat-program-in-c-tcp/</guid>
      <description>tcpserver.c
#include&amp;#34;stdio.h&amp;#34; #include&amp;#34;stdlib.h&amp;#34; #include&amp;#34;sys/types.h&amp;#34; #include&amp;#34;sys/socket.h&amp;#34; #include&amp;#34;string.h&amp;#34; #include&amp;#34;netinet/in.h&amp;#34; #include&amp;#34;pthread.h&amp;#34; #define PORT 4444  #define BUF_SIZE 2000  #define CLADDR_LEN 100  void * receiveMessage(void * socket) { int sockfd, ret; char buffer[BUF_SIZE]; sockfd = (int) socket; memset(buffer, 0, BUF_SIZE); for (;;) { ret = recvfrom(sockfd, buffer, BUF_SIZE, 0, NULL, NULL); if (ret &amp;lt; 0) { printf(&amp;#34;Error receiving data!\n&amp;#34;); } else { printf(&amp;#34;client: &amp;#34;); fputs(buffer, stdout); //printf(&amp;#34;\n&amp;#34;);  } } } void main() { struct sockaddr_in addr, cl_addr; int sockfd, len, ret, newsockfd; char buffer[BUF_SIZE]; pid_t childpid; char clientAddr[CLADDR_LEN]; pthread_t rThread; sockfd = socket(AF_INET, SOCK_STREAM, 0); if (sockfd &amp;lt; 0) { printf(&amp;#34;Error creating socket!</description>
    </item>
    
    <item>
      <title>TCP in C (one server and multiple clients) </title>
      <link>https://dhanoopbhaskar.github.io/posts/2014-01-16-tcp-in-c-one-server-and-multiple-clients/</link>
      <pubDate>Thu, 16 Jan 2014 21:12:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2014-01-16-tcp-in-c-one-server-and-multiple-clients/</guid>
      <description>tcpserver.c
#include&amp;#34;stdio.h&amp;#34; #include&amp;#34;stdlib.h&amp;#34; #include&amp;#34;sys/types.h&amp;#34; #include&amp;#34;sys/socket.h&amp;#34; #include&amp;#34;string.h&amp;#34; #include&amp;#34;netinet/in.h&amp;#34; #define PORT 4444  #define BUF_SIZE 2000  #define CLADDR_LEN 100  void main() { struct sockaddr_in addr, cl_addr; int sockfd, len, ret, newsockfd; char buffer[BUF_SIZE]; pid_t childpid; char clientAddr[CLADDR_LEN]; sockfd = socket(AF_INET, SOCK_STREAM, 0); if (sockfd &amp;lt; 0) { printf(&amp;#34;Error creating socket!\n&amp;#34;); exit(1); } printf(&amp;#34;Socket created...\n&amp;#34;); memset(&amp;amp;addr, 0, sizeof(addr)); addr.sin_family = AF_INET; addr.sin_addr.s_addr = INADDR_ANY; addr.sin_port = PORT; ret = bind(sockfd, (struct sockaddr *) &amp;amp;addr, sizeof(addr)); if (ret &amp;lt; 0) { printf(&amp;#34;Error binding!</description>
    </item>
    
    <item>
      <title>Socket Programming in C, TCP over a network (2 systems)</title>
      <link>https://dhanoopbhaskar.github.io/posts/2014-01-16-socket-programming-in-c-tcp-over-a-network-2-systems/</link>
      <pubDate>Thu, 16 Jan 2014 20:53:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2014-01-16-socket-programming-in-c-tcp-over-a-network-2-systems/</guid>
      <description>tcpserver.c
#include&amp;#34;stdio.h&amp;#34; #include&amp;#34;stdlib.h&amp;#34; #include&amp;#34;sys/types.h&amp;#34; #include&amp;#34;sys/socket.h&amp;#34; #include&amp;#34;string.h&amp;#34; #include&amp;#34;netinet/in.h&amp;#34; #define PORT 4444  #define BUF_SIZE 2000  void main() { struct sockaddr_in addr, cl_addr; int sockfd, len, ret, newsockfd; char buffer[BUF_SIZE]; sockfd = socket(AF_INET, SOCK_STREAM, 0); if (sockfd &amp;lt; 0) { printf(&amp;#34;Error creating socket!\n&amp;#34;); exit(1); } printf(&amp;#34;Socket created...\n&amp;#34;); memset(&amp;amp;addr, 0, sizeof(addr)); addr.sin_family = AF_INET; addr.sin_addr.s_addr = INADDR_ANY; addr.sin_port = PORT; ret = bind(sockfd, (struct sockaddr *) &amp;amp;addr, sizeof(addr)); if (ret &amp;lt; 0) { printf(&amp;#34;Error binding!</description>
    </item>
    
    <item>
      <title>Socket Programming In C (TCP)</title>
      <link>https://dhanoopbhaskar.github.io/posts/2014-01-05-socket-programming-in-c-tcp/</link>
      <pubDate>Sun, 05 Jan 2014 01:03:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2014-01-05-socket-programming-in-c-tcp/</guid>
      <description>tcpserver.c
#include&amp;#34;stdio.h&amp;#34; #include&amp;#34;stdlib.h&amp;#34; #include&amp;#34;sys/types.h&amp;#34; #include&amp;#34;sys/socket.h&amp;#34; #include&amp;#34;string.h&amp;#34; #include&amp;#34;netinet/in.h&amp;#34; #define PORT 4444  #define BUF_SIZE 20  void main() { struct sockaddr_in addr, cl_addr; int sockfd, len, ret, newsockfd; char buffer[BUF_SIZE]; sockfd = socket(AF_INET, SOCK_STREAM, 0); if (sockfd &amp;lt; 0) { printf(&amp;#34;Error creating socket!\n&amp;#34;); exit(1); } printf(&amp;#34;Socket created...\n&amp;#34;); memset(&amp;amp;addr, 0, sizeof(addr)); addr.sin_family = AF_INET; addr.sin_addr.s_addr = INADDR_ANY; addr.sin_port = PORT; ret = bind(sockfd, (struct sockaddr *) &amp;amp;addr, sizeof(addr)); if (ret &amp;lt; 0) { printf(&amp;#34;Error binding!</description>
    </item>
    
    <item>
      <title>Using Turbo C&#43;&#43; in Windows 7 along with graphics support</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-12-12-using-turbo-c-in-windows-7-along-with-graphics-support/</link>
      <pubDate>Sun, 12 Dec 2010 13:36:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-12-12-using-turbo-c-in-windows-7-along-with-graphics-support/</guid>
      <description>DOSBox Use dosbox to mount and run TC.EXE
Download DOSBox here&amp;hellip;
Mounting
Z:\&amp;gt;MOUNT C &amp;quot;PATH OF BIN&amp;quot; Z:\&amp;gt;C: C:\&amp;gt;TC  [TURBO C++ IDE opens]
NB:
  You can include the codes for mounting and running in - C:\\Users\\username\\AppData\\Local\\DOSBox\\dosbox-0.74.conf - file at its end as autoexecute commands on startup; so that it will be executed automatically on every startup of DOSBox.
  To run in fullscreen mode edit the .</description>
    </item>
    
    <item>
      <title>Simulate a car in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-12-12-simulate-a-car-in-c/</link>
      <pubDate>Sun, 12 Dec 2010 12:52:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-12-12-simulate-a-car-in-c/</guid>
      <description>/* * Control keys are: * f-&amp;gt; forward * b-&amp;gt; backward * 0-&amp;gt; brake * 1,2,3,4-&amp;gt; gears */ #include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;graphics.h&amp;gt; #include&amp;lt;math.h&amp;gt; void main() { int gdriver = DETECT, gmode; int xc = 0, yc = 285, r = 15, a = 0, i, x1, y1, x2, y2, mode = 1, dtime = 75; int x3, x4, y3, y4; int kb = &#39;f&#39;; initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:\\tc\\bgi&amp;quot;); cleardevice(); while (1) { if (kbhit()) { kb = getch(); if (kb == &#39;q&#39;) { cleardevice(); printf(&amp;quot;\n You are about to quit.</description>
    </item>
    
    <item>
      <title>Catching a fish in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-catching-a-fish-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:49:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-catching-a-fish-in-c/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;graphics.h&amp;gt; void fish(); void fishcatch(); int fishx = 0, fishy = 460, fishang = 0, tempx, tempy, fishx2 = 350, fishy2 = 400; void main() { int gdriver = DETECT, gmode, errorcode; int x, y, ch, yincr = 0; initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;&amp;quot;); errorcode = graphresult(); if (errorcode != grOk) { printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode)); printf(&amp;quot;Press any key to halt:&amp;quot;); getch(); exit(1); } x = 350; y = 240; while (!</description>
    </item>
    
    <item>
      <title>Sinking of Titanic</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-sinking-of-titanic/</link>
      <pubDate>Thu, 18 Nov 2010 18:47:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-sinking-of-titanic/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;graphics.h&amp;gt; void titanic(int, int); void titanics(int, int); void iceberg(); int poly[] = { 0, 300, 640, 300, 640, 480, 0, 480, 0, 300 }; int ix = 1, iy = 1; void main() { int gdriver = DETECT, gmode, errorcode; int maxx, maxy; int xincr = 1, yincr = 1, i; int tempx = 400, tempy = 300; int sink = 0; initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;); errorcode = graphresult(); if (errorcode !</description>
    </item>
    
    <item>
      <title>Sunset in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-sunset-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:46:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-sunset-in-c/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;graphics.h&amp;gt; void main() { int gdriver = DETECT, gmode, errorcode; int midx, midy, radius = 40; initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;); errorcode = graphresult(); if (errorcode != grOk) { printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode)); printf(&amp;quot;Press any key to halt:&amp;quot;); getch(); exit(1); } midx = getmaxx() / 2; while (radius &amp;gt;= 10) { cleardevice(); line(0, 210, 160, 50); setcolor(WHITE); line(160, 50, 320, 210); line(320, 210, 480, 50); line(480, 50, 640, 210); line(0, 210, 640, 210); arc(midx, 210, 45, 135, radius); setfillstyle(SOLID_FILL, YELLOW); floodfill(midx, 200, 15); setcolor(BLUE); setfillstyle(SOLID_FILL, LIGHTBLUE); floodfill(2, 2, 15); setfillstyle(SOLID_FILL, BROWN); floodfill(150, 150, 15); floodfill(550, 150, 15); setcolor(15); line(0, 400, 640, 300); setfillstyle(SOLID_FILL, BLUE); floodfill(2, 350, 15); setfillstyle(SOLID_FILL, GREEN); floodfill(2, 410, 15); delay(100); radius -= 1; } if (radius &amp;lt;= 10) cleardevice(); getch(); } </description>
    </item>
    
    <item>
      <title>Rotation of Fan in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-rotation-of-fan-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:44:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-rotation-of-fan-in-c/</guid>
      <description>#include&amp;lt;graphics.h&amp;gt; #include&amp;lt;stdio.h&amp;gt; #include&amp;lt;stdlib.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;dos.h&amp;gt; #include&amp;lt;time.h&amp;gt; #include&amp;lt;process.h&amp;gt; #include&amp;lt;math.h&amp;gt; void user(); float s1 = 0.0, s2 = 120.0, s3 = 240.0; int midx, midy; void main() { int gdriver = DETECT, gmode, errorcode; initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;C:/TC/BGI&amp;quot;); errorcode = graphresult(); if (errorcode != grOk) { printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode)); printf(&amp;quot;Press any key to halt:&amp;quot;); getch(); exit(1); } midx = getmaxx() / 2; midy = getmaxy() / 2; loop: cleardevice(); circle(midx, midy, 5); setcolor(10); line(midx, midy, (midx + 100 * cos(s1 * 3.</description>
    </item>
    
    <item>
      <title>Sunrise in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-sunrise-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:44:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-sunrise-in-c/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;graphics.h&amp;gt; void main() { int gdriver = DETECT, gmode, errorcode; int midx, midy, radius = 10; initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;); errorcode = graphresult(); if (errorcode != grOk) { printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode)); printf(&amp;quot;Press any key to halt:&amp;quot;); getch(); exit(1); } midx = getmaxx() / 2; while (radius &amp;lt;= 40) { cleardevice(); line(0, 210, 160, 50); setcolor(WHITE); line(160, 50, 320, 210); line(320, 210, 480, 50); line(480, 50, 640, 210); line(0, 210, 640, 210); arc(midx, 210, 45, 133, radius); setfillstyle(SOLID_FILL, YELLOW); floodfill(midx, 200, 15); setcolor(BLUE); setfillstyle(SOLID_FILL, LIGHTBLUE); floodfill(2, 2, 15); setfillstyle(SOLID_FILL, BROWN); floodfill(150, 150, 15); floodfill(550, 150, 15); setcolor(15); line(0, 400, 640, 300); setfillstyle(SOLID_FILL, BLUE); floodfill(2, 350, 15); setfillstyle(SOLID_FILL, GREEN); floodfill(2, 410, 15); delay(100); radius += 1; } getch(); } </description>
    </item>
    
    <item>
      <title>Analog Clock in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-analog-clock-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:42:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-analog-clock-in-c/</guid>
      <description>/*WAP to illustrate an analog clock*/ #include&amp;lt;graphics.h&amp;gt; #include&amp;lt;stdio.h&amp;gt; #include&amp;lt;stdlib.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;dos.h&amp;gt; #include&amp;lt;time.h&amp;gt; #include&amp;lt;process.h&amp;gt; #include&amp;lt;math.h&amp;gt; void user(); float h, ma, hour, minute, sec, m, s; void main() { int gdriver = DETECT, gmode, errorcode; struct time t; initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;C:/TC/BGI&amp;quot;); errorcode = graphresult(); if (errorcode != grOk) { printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode)); printf(&amp;quot;Press any key to halt:&amp;quot;); getch(); exit(1); } loop: gettime( &amp;amp; t); hour = t.ti_hour; minute = t.</description>
    </item>
    
    <item>
      <title>Mid-point Ellipse Drawing Algorithm</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-mid-point-ellipse-drawing-algorithm/</link>
      <pubDate>Thu, 18 Nov 2010 18:41:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-mid-point-ellipse-drawing-algorithm/</guid>
      <description>#include&amp;lt;graphics.h&amp;gt; #include&amp;lt;stdlib.h&amp;gt; #include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; void ellipsemid(int xcenter, int ycenter, int rx, int ry); void point(int x, int xcenter, int ycenter, int y); int maxx, maxy, xcenter, ycenter, rx, ry, grok; void main() { int gdriver = DETECT, errorcode, gmode, a, b, c, d; initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;); errorcode = graphresult(); if (errorcode != grOk) { printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode)); printf(&amp;quot;Press any key to halt:&amp;quot;); getch(); exit(1); } clrscr(); maxx = getmaxx(); maxy = getmaxy(); xcenter = 200; ycenter = 200; rx = 50; ry = 50; setcolor(4); ellipsemid(xcenter, ycenter, rx, ry); getch(); //closegraph(); } void ellipsemid(int xcenter, int ycenter, int rx, int ry) { int p, px, py, x, y, ry2, rx2, tworx2, twory2; ry2 = ry * ry; rx2 = rx * rx; twory2 = 2 * ry2; tworx2 = 2 * rx2; x = 0; y = ry; point(x, xcenter, ycenter, y); p = abs(ry2 - ry2 * ry + (0.</description>
    </item>
    
    <item>
      <title>Line Clipping in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-line-clipping-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:39:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-line-clipping-in-c/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;graphics.h&amp;gt; int xwmin, ywmin, xwmax, ywmax; void rcode(int, int, int[]); int check(int[], int[]); void main() { int gdriver = DETECT, gmode, errorcode; int x1, y1, x2, y2, code1[4], code2[4], x, y, m; int point[2][2], p = 0; initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;); errorcode = graphresult(); if (errorcode != grOk) { printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode)); printf(&amp;quot;Press any key to halt:&amp;quot;); getch(); exit(1); } printf(&amp;quot;\n Enter the coordinates of window &amp;quot;); printf(&amp;quot;\n xwmin and ywmin: &amp;quot;); scanf(&amp;quot;%d%d&amp;quot;, &amp;amp; xwmin, &amp;amp; ywmin); printf(&amp;quot;\n xwmax and ywmax: &amp;quot;); scanf(&amp;quot;%d%d&amp;quot;, &amp;amp; xwmax, &amp;amp; ywmax); printf(&amp;quot;\n Enter the coordinates of line &amp;quot;); printf(&amp;quot;\n Enter the coordinate for the first end point of the line: &amp;quot;); scanf(&amp;quot;%d%d&amp;quot;, &amp;amp; x1, &amp;amp; y1); printf(&amp;quot;\n Enter the coordinate for the second end point of the line: &amp;quot;); scanf(&amp;quot;%d%d&amp;quot;, &amp;amp; x2, &amp;amp; y2); rcode(x1, y1, code1); rcode(x2, y2, code2); if (check(code1, code2) == 1) { rectangle(xwmin, ywmin, xwmax, ywmax); printf(&amp;quot;1&amp;quot;); } else { m = (y2 - y1) / (x2 - x1); rectangle(xwmin, ywmin, xwmax, ywmax); line(x1, y1, x2, y2); setcolor(4); if (x1 &amp;lt; xwmin) { y = y1 + m * (xwmin - x1); x = xwmin; x1 = x; y1 = y; } if (x2 &amp;gt; xwmax) { y = y2 + m * (xwmax - x2); x = xwmax; x2 = x; y2 = y; } if (y1 &amp;lt; ywmin) { x = x1 + (ywmin - y1) / m; y = ywmin; x1 = x; y1 = y; } if (y2 &amp;gt; ywmax) { x = x2 + (ywmax - y2) / m; y = ywmax; x2 = x; y2 = y; } line(x1, y1, x2, y2); } getch(); } int check(int code1[], int code2[]) { int flag = 0; if (code1[3] == 1 &amp;amp;&amp;amp; code2[3] == 1) flag = 1; if (code1[2] == 1 &amp;amp;&amp;amp; code2[2] == 1) flag = 1; if (code1[1] == 1 &amp;amp;&amp;amp; code2[1] == 1) flag = 1; if (code1[0] == 1 &amp;amp;&amp;amp; code2[0] == 1) flag = 1; return flag; } void rcode(int x, int y, int code[]) { if (y &amp;gt; ywmax) //bottom code[2] = 1; else code[2] = 0; if (y &amp;lt; ywmin) //top code[3] = 1; else code[3] = 0; if (x &amp;gt; xwmax) //right code[1] = 1; else code[1] = 0; if (x &amp;lt; xwmin) //left code[0] = 1; else code[0] = 0; } </description>
    </item>
    
    <item>
      <title>WAP in C to generate recursive descend parser</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-in-c-to-generate-recursive-descend-parser/</link>
      <pubDate>Fri, 28 May 2010 17:40:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-in-c-to-generate-recursive-descend-parser/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;ctype.h&amp;gt; int lptr = 0; //look ahead pointer char buff[100]; //buffer to store input string int success = 1; //to reflect success or failure void E(); void EDASH(); void T(); void TDASH(); void V(); void start() { E(); } int isvalid(char ch) { if (isalpha(ch)) return 1; else if (toascii(ch) &amp;gt;= 47 &amp;amp;&amp;amp; toascii(ch) &amp;lt;= 57) return 1; else return 0; } void advance() { lptr++; } void E() { T(); EDASH(); } void EDASH() { if (buff[lptr] == &#39;+&#39;) { advance(); T(); EDASH(); } } void T() { V(); TDASH(); } void TDASH() { if (buff[lptr] == &#39;*&#39;) { advance(); V(); TDASH(); } } void V() { if (isvalid(buff[lptr])) { advance(); } else if (buff[lptr] == &#39;(&#39;) { advance(); E(); if (buff[lptr] == &#39;)&#39;) { advance(); } else { printf(&amp;quot;\n* Right parantheses missing &amp;quot;); success = 0; } } else { printf(&amp;quot;\n* Symbol(s) unidentified&amp;quot;); success = 0; getch(); exit(0); } } void main() { int n; clrscr(); printf(&amp;quot;\n\t----------------&amp;quot;); printf(&amp;quot;\n\t GRAMMAR&amp;quot;); printf(&amp;quot;\n\t----------------\n&amp;quot;); printf(&amp;quot;\n\t E ::= TE&#39;&amp;quot;); printf(&amp;quot;\n\t E&#39;::= +TE&#39;|$&amp;quot;); printf(&amp;quot;\n\t T ::= VT&#39;&amp;quot;); printf(&amp;quot;\n\t T&#39;::= *VT&#39;|$&amp;quot;); printf(&amp;quot;\n\t V ::= &amp;lt;id&amp;gt;&amp;quot;); printf(&amp;quot;\n\t----------------\n\n&amp;quot;); printf(&amp;quot;\n Enter an expression: &amp;quot;); gets(buff); n = strlen(buff); start(); if (success == 1 &amp;amp;&amp;amp; lptr &amp;gt;= n) { printf(&amp;quot;\n* Correct syntax of expression&amp;quot;); } else { printf(&amp;quot;\n* Incorrect syntax of expression&amp;quot;); } getch(); } </description>
    </item>
    
    <item>
      <title>WAP to generate symbol table</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-generate-symbol-table/</link>
      <pubDate>Fri, 28 May 2010 17:38:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-generate-symbol-table/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; int isnum(int n) { if (n &amp;gt; 0 &amp;amp;&amp;amp; n &amp;lt; 100) return 1; else return 0; } void main() { FILE * fp; char words[50][25], str[25], ch; char name[50][25]; int size[50], add[50]; int temp, ad = 1000; int i, j, w = 0, d = 0; fp = fopen(&amp;quot;tsym.c&amp;quot;, &amp;quot;r&amp;quot;); clrscr(); printf(&amp;quot;\n File: tsym.c\n\n&amp;quot;); if (fp != NULL) { do { j = 0; ch = &#39;d&#39;; strcpy(str, &amp;quot;&amp;quot;); while (ch !</description>
    </item>
    
    <item>
      <title>WAP to print comments in a given program</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-print-comments-in-a-given-program/</link>
      <pubDate>Fri, 28 May 2010 17:36:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-print-comments-in-a-given-program/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; void main() { char str[25], ch, words[50][25]; int i, k, j, w = 0; FILE * fp; clrscr(); fp = fopen(&amp;quot;tcom.c&amp;quot;, &amp;quot;r&amp;quot;); printf(&amp;quot;\n File: tcom.c\n\n&amp;quot;); if (fp != NULL) { do { j = 0; ch = &#39;d&#39;; strcpy(str, &amp;quot;&amp;quot;); while (ch != &#39; &#39;) { ch = getc(fp); putchar(ch); if (ch == EOF) break; str[j] = ch; if (ch != &#39; &#39; &amp;amp;&amp;amp; ch != &#39;\n&#39; &amp;amp;&amp;amp; ch !</description>
    </item>
    
    <item>
      <title>WAP to check the syntax of for loops</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-check-the-syntax-of-for-loops/</link>
      <pubDate>Fri, 28 May 2010 17:34:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-check-the-syntax-of-for-loops/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; void main() { char str[25], ch, words[25][25]; int i, k, j, w = 0, s = 0, cntl = 0, cntr = 0, p = 0, parR = 0, f = 0, parL = 0; FILE * fp; clrscr(); fp = fopen(&amp;quot;tnest.c&amp;quot;, &amp;quot;r&amp;quot;); printf(&amp;quot;\n File: tnest.c\n\n&amp;quot;); if (fp != NULL) { do { j = 0; ch = &#39;d&#39;; strcpy(str, &amp;quot;&amp;quot;); while (ch != &#39; &#39;) { ch = getc(fp); putchar(ch); if (ch == EOF) break; if (ch == &#39;{&#39;) cntl++; else if (ch == &#39;}&#39;) cntr++; str[j] = ch; if (ch !</description>
    </item>
    
    <item>
      <title>WAP to perform macro expansion</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-perform-macro-expansion/</link>
      <pubDate>Fri, 28 May 2010 17:31:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-perform-macro-expansion/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; void main() { char words[25][25]; char str[25], ch; int i, j, w = 0, m = 0, flag = 0; char macro[10][25]; char val[10][25]; long l; FILE * fp, * fp1; fp = fopen(&amp;quot;text.c&amp;quot;, &amp;quot;r&amp;quot;); fp1 = fopen(&amp;quot;temp.c&amp;quot;, &amp;quot;w&amp;quot;); clrscr(); printf(&amp;quot;\n File: text.c before MACRO EXPANSION\n\n&amp;quot;); if (fp != NULL) { do { j = 0; ch = &#39;d&#39;; strcpy(str, &amp;quot;&amp;quot;); while (ch != &#39; &#39;) { ch = getc(fp); printf(&amp;quot;%c&amp;quot;, ch); if (ch == EOF) break; putc(ch, fp1); str[j] = ch; if (ch !</description>
    </item>
    
    <item>
      <title>WAP to check the correctness of braces</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-check-the-correctness-of-braces/</link>
      <pubDate>Fri, 28 May 2010 17:30:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-05-28-wap-to-check-the-correctness-of-braces/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; void main() { FILE * fp; char ch; int countL = 0, countR = 0; fp = fopen(&amp;quot;tbraces.c&amp;quot;, &amp;quot;r&amp;quot;); clrscr(); printf(&amp;quot;\n File: tbraces.c\n\n&amp;quot;); if (fp != NULL) { do { ch = &#39;d&#39;; while (ch != &#39; &#39;) { ch = getc(fp); printf(&amp;quot;%c&amp;quot;, ch); if (ch == &#39;{&#39;) countL++; if (ch == &#39;}&#39;) countR++; if (ch == EOF) break; } } while (ch != EOF); } if (countL !</description>
    </item>
    
    <item>
      <title>Write a program in C to perform token separation</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-05-28-write-a-program-in-c-to-perform-token-separation/</link>
      <pubDate>Fri, 28 May 2010 17:14:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2010-05-28-write-a-program-in-c-to-perform-token-separation/</guid>
      <description>#include&amp;lt;stdio.h&amp;gt; #include&amp;lt;conio.h&amp;gt; void main() { FILE * fp; char words[50][25], str[25], ch; char key[50][25], op[50][10], id[50][25]; int i, j, k = 0, w = 0, p = 0, d = 0; int yes = 0; fp = fopen(&amp;quot;ttoken.c&amp;quot;, &amp;quot;r&amp;quot;); clrscr(); printf(&amp;quot;\n File: ttoken.c\n\n&amp;quot;); if (fp != NULL) { do { j = 0; ch = &#39;d&#39;; strcpy(str, &amp;quot;&amp;quot;); while (ch != &#39; &#39;) { ch = getc(fp); printf(&amp;quot;%c&amp;quot;, ch); if (ch == EOF) break; str[j++] = ch; switch (ch) { case &#39;+&#39;: strcpy(op[p++], &amp;quot;+&amp;quot;); break; case &#39;-&#39;: strcpy(op[p++], &amp;quot;-&amp;quot;); break; case &#39;*&#39;: strcpy(op[p++], &amp;quot;*&amp;quot;); break; case &#39;/&#39;: strcpy(op[p++], &amp;quot;/&amp;quot;); break; case &#39;%&#39;: strcpy(op[p++], &amp;quot;%&amp;quot;); break; case &#39;=&#39;: strcpy(op[p++], &amp;quot;=&amp;quot;); break; } if (ch == &#39; &#39; || ch == &#39;\n&#39; || ch == &#39;=&#39;) { j--; break; } if (ch == &#39;;&#39; || ch == &#39;(&#39; || ch == &#39;)&#39; || ch == &#39;,&#39;) { j--; break; } } str[j] = &#39;\0&#39;; strcpy(words[w++], str); if (ch == &#39;(&#39;) strcpy(words[w++], &amp;quot;(&amp;quot;); if (ch == &#39;;&#39;) strcpy(words[w++], &amp;quot;;&amp;quot;); if (ch == &#39;)&#39;) strcpy(words[w++], &amp;quot;)&amp;quot;); if (ch == &#39;=&#39;) strcpy(words[w++], &amp;quot;=&amp;quot;); if (ch == &#39;,&#39;) strcpy(words[w++], &amp;quot;,&amp;quot;); j = 0; } while (ch !</description>
    </item>
    
    <item>
      <title>Some Data Structure Programs in C&#43;&#43;</title>
      <link>https://dhanoopbhaskar.github.io/posts/2009-06-28-some-data-structure-programs/</link>
      <pubDate>Sun, 28 Jun 2009 19:17:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2009-06-28-some-data-structure-programs/</guid>
      <description>1. WAP to implement searching in a linked list #include&amp;lt;iostream.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;process.h&amp;gt; class node { int data; node * next; public: void insert(); void search(int); void display(); }; node *start, *head, *temp; void node::insert() { head = new node; cout&amp;lt;&amp;lt;&amp;quot;\n Enter the data item: &amp;quot;; cin&amp;gt;&amp;gt;head-&amp;gt;data; head-&amp;gt;next = NULL; if (start == NULL) { start = head; } else { temp = start; while (temp-&amp;gt;next != NULL) { temp = temp-&amp;gt;next; } temp-&amp;gt;next = head; } } void node::display() { temp = start; if (start == NULL) cout&amp;lt;&amp;lt;&amp;quot;\n Data list is empty &amp;quot;; else { cout&amp;lt;&amp;lt;&amp;quot;\n DATA LIST: &amp;quot;; while (temp !</description>
    </item>
    
    <item>
      <title>C&#43;&#43; - Scientific Calculator</title>
      <link>https://dhanoopbhaskar.github.io/posts/2009-04-30-c-scientific-calculator/</link>
      <pubDate>Thu, 30 Apr 2009 18:54:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2009-04-30-c-scientific-calculator/</guid>
      <description>#include&amp;lt;iostream.h&amp;gt; #include&amp;lt;conio.h&amp;gt; #include&amp;lt;math.h&amp;gt; #include&amp;lt;stdio.h&amp;gt; #include&amp;lt;process.h&amp;gt; #include&amp;lt;graphics.h&amp;gt; #include&amp;lt;ctype.h&amp;gt; double rfact(double); void main() { int ch; int k, n, choice; float sinx, cosx, tanx, cotx, secx, cosecx; float x, j, i; clrscr(); cin&amp;gt;&amp;gt;ch; if (ch == 4444) { int gdriver = DETECT, gmode, errorcode; initgraph( &amp;amp;gdriver, &amp;amp;gmode, &amp;quot;e:\\tc\\bgi&amp;quot;); setbkcolor(LIGHTRED); settextstyle(7, 0, 9); outtextxy(45, 160, &amp;quot;..WELCOME!..&amp;quot;); //page1 getch(); closegraph(); } getch(); clrscr(); textcolor(YELLOW + 128); gotoxy(30, 12); cprintf(&amp;quot;COMPUTER EXHIBITION\n\r&amp;quot;); //page2 textcolor(GREEN); gotoxy(30, 14); cprintf(&amp;quot; Dhanoop Bhaskar \n\r&amp;quot;); textcolor(BLUE); gotoxy(30, 15); cprintf(&amp;quot; C2 Batch\n\r&amp;quot;); textcolor(CYAN); gotoxy(30, 16); cprintf(&amp;quot; CARDINAL .</description>
    </item>
    
    <item>
      <title>DATA STRUCTURE PROGRAMS IN C&#43;&#43;</title>
      <link>https://dhanoopbhaskar.github.io/posts/2009-04-23-data-structure-programs-in-c/</link>
      <pubDate>Thu, 23 Apr 2009 19:10:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/posts/2009-04-23-data-structure-programs-in-c/</guid>
      <description>Write a C++ program to find the sparse of a matrix #include&amp;lt;iostream.h&amp;gt; #include&amp;lt;conio.h&amp;gt; void main() { int a[50][50], sp[50][50], i, j, k = 0, m, n; clrscr(); cout&amp;lt;&amp;lt;&amp;quot;\n Enter the order of matrix: &amp;quot;; cin&amp;gt;&amp;gt;m&amp;gt;&amp;gt;n; cout&amp;lt;&amp;lt;&amp;quot;\n Enter the elements: &amp;quot;; for (i = 0; i &amp;lt; m; i++) { for (j = 0; j &amp;lt; n; j++) { cin&amp;gt;&amp;gt;a[i][j]; if (a[i][j] != 0) { k++; sp[k][0] = i; sp[k][1] = j; sp[k][2] = a[i][j]; } } } sp[0][0] = m; sp[0][1] = n; sp[0][2] = k; cout&amp;lt;&amp;lt;&amp;quot;\n The sparse matrix is:\n&amp;quot;; for (i = 0; i &amp;lt;= k; i++) { for (j = 0; j &amp;lt; 3; j++) cout&amp;lt;&amp;lt;sp[i][j] &amp;lt;&amp;lt;&amp;quot; &amp;quot;; cout&amp;lt;&amp;lt;&amp;quot;\n&amp;quot;; } getch(); }  OUTPUT Enter the order of matrix: 3 3 Enter the elements: 0 1 0 2 0 0 0 0 3 The sparse matrix is: 3 3 3 0 1 1 1 0 2 2 2 3  Write a C++ program to find the transpose of a matrix using the given sparse matrix #include&amp;lt;iostream.</description>
    </item>
    
  </channel>
</rss>