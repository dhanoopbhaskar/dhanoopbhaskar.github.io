<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graphics on The Insane Techie</title>
    <link>https://dhanoopbhaskar.github.io/tags/graphics/</link>
    <description>Recent content in Graphics on The Insane Techie</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 12 Dec 2010 13:36:00 +0530</lastBuildDate>
    <atom:link href="https://dhanoopbhaskar.github.io/tags/graphics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Turbo C&#43;&#43; in Windows 7 along with graphics support</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-12-12-using-turbo-c-in-windows-7-along-with-graphics-support/</link>
      <pubDate>Sun, 12 Dec 2010 13:36:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-12-12-using-turbo-c-in-windows-7-along-with-graphics-support/</guid>
      <description>&lt;h3 id=&#34;dosbox&#34;&gt;&#xA;  DOSBox&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#dosbox&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Use dosbox to mount and run TC.EXE&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://space.dl.sourceforge.net/project/dosbox/dosbox/0.74/DOSBox0.74-win32-installer.exe&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Download DOSBox here&amp;hellip;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mounting&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Z:\&amp;gt;MOUNT C &amp;quot;PATH OF BIN&amp;quot;&#xA;Z:\&amp;gt;C:&#xA;C:\&amp;gt;TC &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[TURBO C++ IDE opens]&lt;/p&gt;&#xA;&lt;p&gt;NB:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You can include the codes for mounting and running in -&#xA;&lt;code&gt;C:\\Users\\username\\AppData\\Local\\DOSBox\\dosbox-0.74.conf&lt;/code&gt; - file at its end as autoexecute commands on startup; so that it will be executed automatically on every startup of DOSBox.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;To run in fullscreen mode edit the .conf file mentioned above and&#xA;change &amp;ldquo;fullscreen=false&amp;rdquo; to &amp;ldquo;fullscreen=true&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simulate a car in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-12-12-simulate-a-car-in-c/</link>
      <pubDate>Sun, 12 Dec 2010 12:52:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-12-12-simulate-a-car-in-c/</guid>
      <description>&lt;pre&gt;&lt;code&gt;/*&#xA;* Control keys are:&#xA;* f-&amp;gt; forward&#xA;* b-&amp;gt; backward&#xA;* 0-&amp;gt; brake&#xA;* 1,2,3,4-&amp;gt; gears&#xA;*/&#xA;&#xA;#include&amp;lt;stdio.h&amp;gt;&#xA;#include&amp;lt;conio.h&amp;gt;&#xA;#include&amp;lt;graphics.h&amp;gt;&#xA;#include&amp;lt;math.h&amp;gt;&#xA;void main() {&#xA;    int gdriver = DETECT, gmode;&#xA;    int xc = 0, yc = 285, r = 15, a = 0, i, x1, y1, x2, y2, mode = 1, dtime = 75;&#xA;    int x3, x4, y3, y4;&#xA;    int kb = &#39;f&#39;;&#xA;    initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:\\tc\\bgi&amp;quot;);&#xA;    cleardevice();&#xA;    while (1) {&#xA;        if (kbhit()) {&#xA;            kb = getch();&#xA;            if (kb == &#39;q&#39;) {&#xA;                cleardevice();&#xA;                printf(&amp;quot;\n You are about to quit...press any key...&amp;quot;);&#xA;                getch();&#xA;                exit(0);&#xA;            }&#xA;            if (kb == &#39;b&#39;) {&#xA;                mode = 0;&#xA;            }&#xA;            if (kb == &#39;f&#39;) {&#xA;                mode = 1;&#xA;            }&#xA;            if (kb == &#39;1&#39;) {&#xA;                dtime = 80;&#xA;            }&#xA;            if (kb == &#39;2&#39;) {&#xA;                dtime = 60;&#xA;            }&#xA;            if (kb == &#39;3&#39;) {&#xA;                dtime = 40;&#xA;            }&#xA;            if (kb == &#39;4&#39;) {&#xA;                dtime = 20;&#xA;            }&#xA;            if (kb == &#39;0&#39;) {&#xA;                mode = 2;&#xA;                continue;&#xA;            }&#xA;        }&#xA;&#xA;        if (mode != 2) {&#xA;            cleardevice();&#xA;        }&#xA;&#xA;        line(0, 300, 640, 300);&#xA;&#xA;        if (mode == 0) //reverse&#xA;        {&#xA;            setcolor(9);&#xA;            /*wheels*/&#xA;            circle(xc, yc, r);&#xA;            circle(xc + 100, yc, r);&#xA;            /*body*/&#xA;            line(xc - 35, yc, xc - 15, yc);&#xA;            line(xc + 15, yc, xc + 85, yc);&#xA;            line(xc + 115, yc, xc + 135, yc);&#xA;            line(xc - 35, yc, xc - 35, yc - 25);&#xA;            line(xc + 135, yc, xc + 135, yc - 25);&#xA;&#xA;            line(xc - 35, yc - 25, xc, yc - 30);&#xA;            line(xc + 135, yc - 25, xc + 100, yc - 30);&#xA;&#xA;            line(xc, yc - 30, xc + 15, yc - 50);&#xA;            line(xc + 100, yc - 30, xc + 85, yc - 50);&#xA;&#xA;            line(xc + 15, yc - 50, xc + 85, yc - 50);&#xA;            /*glasses*/&#xA;            line(xc + 6, yc - 30, xc + 18, yc - 47);&#xA;            line(xc + 18, yc - 47, xc + 18, yc - 30);&#xA;            line(xc + 6, yc - 30, xc + 18, yc - 30);&#xA;&#xA;            line(xc + 94, yc - 30, xc + 82, yc - 47);&#xA;            line(xc + 82, yc - 47, xc + 82, yc - 30);&#xA;            line(xc + 94, yc - 30, xc + 82, yc - 30);&#xA;&#xA;            line(xc + 21, yc - 47, xc + 21, yc - 30);&#xA;            line(xc + 21, yc - 47, xc + 48, yc - 47);&#xA;            line(xc + 21, yc - 30, xc + 48, yc - 30);&#xA;            line(xc + 48, yc - 30, xc + 48, yc - 47);&#xA;&#xA;            line(xc + 79, yc - 47, xc + 79, yc - 30);&#xA;            line(xc + 79, yc - 47, xc + 52, yc - 47);&#xA;            line(xc + 79, yc - 30, xc + 52, yc - 30);&#xA;            line(xc + 52, yc - 30, xc + 52, yc - 47);&#xA;&#xA;            for (i = 0; i &amp;lt; 4; i++) {&#xA;                x1 = xc + (r * cos(a));&#xA;                y1 = yc + (r * sin(a));&#xA;                x2 = xc - (r * cos(a));&#xA;                y2 = yc - (r * sin(a));&#xA;                x3 = (xc + 100) + (r * cos(a));&#xA;                y3 = yc + (r * sin(a));&#xA;                x4 = (xc + 100) - (r * cos(a));&#xA;                y4 = yc - (r * sin(a));&#xA;                line(x1, y1, x2, y2);&#xA;                line(x3, y3, x4, y4);&#xA;                a += 90;&#xA;&#xA;            }&#xA;            xc -= 1;&#xA;            delay(dtime);&#xA;        }&#xA;&#xA;        /*forward*/&#xA;        if (mode == 1) {&#xA;            setcolor(9);&#xA;            /*wheels*/&#xA;            circle(xc, yc, r);&#xA;            circle(xc + 100, yc, r);&#xA;            /*body*/&#xA;            line(xc - 35, yc, xc - 15, yc);&#xA;            line(xc + 15, yc, xc + 85, yc);&#xA;            line(xc + 115, yc, xc + 135, yc);&#xA;            line(xc - 35, yc, xc - 35, yc - 25);&#xA;            line(xc + 135, yc, xc + 135, yc - 25);&#xA;&#xA;            line(xc - 35, yc - 25, xc, yc - 30);&#xA;            line(xc + 135, yc - 25, xc + 100, yc - 30);&#xA;&#xA;            line(xc, yc - 30, xc + 15, yc - 50);&#xA;            line(xc + 100, yc - 30, xc + 85, yc - 50);&#xA;&#xA;            line(xc + 15, yc - 50, xc + 85, yc - 50);&#xA;            /*glasses*/&#xA;            line(xc + 6, yc - 30, xc + 18, yc - 47);&#xA;            line(xc + 18, yc - 47, xc + 18, yc - 30);&#xA;            line(xc + 6, yc - 30, xc + 18, yc - 30);&#xA;&#xA;            line(xc + 94, yc - 30, xc + 82, yc - 47);&#xA;            line(xc + 82, yc - 47, xc + 82, yc - 30);&#xA;            line(xc + 94, yc - 30, xc + 82, yc - 30);&#xA;&#xA;            line(xc + 21, yc - 47, xc + 21, yc - 30);&#xA;            line(xc + 21, yc - 47, xc + 48, yc - 47);&#xA;            line(xc + 21, yc - 30, xc + 48, yc - 30);&#xA;            line(xc + 48, yc - 30, xc + 48, yc - 47);&#xA;&#xA;&#xA;            line(xc + 79, yc - 47, xc + 79, yc - 30);&#xA;            line(xc + 79, yc - 47, xc + 52, yc - 47);&#xA;            line(xc + 79, yc - 30, xc + 52, yc - 30);&#xA;            line(xc + 52, yc - 30, xc + 52, yc - 47);&#xA;&#xA;            for (i = 0; i &amp;lt; 4; i++) {&#xA;                x1 = xc + (r * cos(-a));&#xA;                y1 = yc + (r * sin(-a));&#xA;                x2 = xc - (r * cos(-a));&#xA;                y2 = yc - (r * sin(-a));&#xA;                x3 = (xc + 100) + (r * cos(-a));&#xA;                y3 = yc + (r * sin(-a));&#xA;                x4 = (xc + 100) - (r * cos(-a));&#xA;                y4 = yc - (r * sin(-a));&#xA;                line(x1, y1, x2, y2);&#xA;                line(x3, y3, x4, y4);&#xA;                a += 90;&#xA;            }&#xA;            xc += 1;&#xA;            delay(dtime);&#xA;&#xA;        }&#xA;&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Catching a fish in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-catching-a-fish-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:49:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-catching-a-fish-in-c/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt; &#xA;#include&amp;lt;conio.h&amp;gt; &#xA;#include&amp;lt;graphics.h&amp;gt;&#xA;void fish();&#xA;void fishcatch();&#xA;int fishx = 0, fishy = 460, fishang = 0, tempx, tempy, fishx2 = 350, fishy2 = 400;&#xA;void main() {&#xA;    int gdriver = DETECT, gmode, errorcode;&#xA;    int x, y, ch, yincr = 0;&#xA;    initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;&amp;quot;);&#xA;    errorcode = graphresult();&#xA;    if (errorcode != grOk) {&#xA;        printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode));&#xA;        printf(&amp;quot;Press any key to halt:&amp;quot;);&#xA;        getch();&#xA;        exit(1);&#xA;    }&#xA;    x = 350;&#xA;    y = 240;&#xA;&#xA;    while (!kbhit()) {&#xA;        rectangle(-1, 240, 641, 481);&#xA;        setfillstyle(1, BLUE);&#xA;        floodfill(1, 241, 15);&#xA;        line(x, y, x + 100, y);&#xA;        line(x + 100, y, x + 130, y - 20);&#xA;        line(x, y, x - 30, y - 20);&#xA;        line(x - 30, y - 20, x + 130, y - 20);&#xA;        setfillstyle(1, BROWN);&#xA;        floodfill(x + 1, y - 1, 15);&#xA;        arc(x + 50, y - 20, 0, 180, 15);&#xA;        setfillstyle(1, RED);&#xA;        floodfill(x + 50, y - 21, 15);&#xA;        circle(x + 50, y - 40, 6);&#xA;        setfillstyle(1, LIGHTGRAY);&#xA;        floodfill(x + 50, y - 41, 15);&#xA;        delay(50);&#xA;        cleardevice();&#xA;        if (x &amp;gt;= 300)&#xA;            x = x - 1;&#xA;        else if (y + yincr &amp;lt;= 400) {&#xA;            if (fishx &amp;lt; 330)&#xA;                yincr++;&#xA;        }&#xA;        line(x + 40, y, x + 50, y + yincr);&#xA;&#xA;        if (x &amp;lt;= 350) {&#xA;            fishx++;&#xA;            if (fishx &amp;gt;= 330) {&#xA;                if (yincr &amp;gt;= 0) {&#xA;                    fishcatch();&#xA;                    fishy2--;&#xA;                    yincr--;&#xA;                } else {&#xA;                    cleardevice();&#xA;                    printf(&amp;quot;Fish curry: Rs.15/-&amp;quot;);&#xA;                    getch();&#xA;                    exit(0);&#xA;                }&#xA;            } else {&#xA;                fish();&#xA;&#xA;                if (y + yincr &amp;gt;= 390)&#xA;                    fishy = fishy - 0.5;&#xA;&#xA;                if (fishy &amp;lt;= 400)&#xA;                    fishy = 400;&#xA;&#xA;                if (fishx &amp;gt;= 330)&#xA;                    fishx = 330;&#xA;            }&#xA;        }&#xA;&#xA;    }&#xA;&#xA;&#xA;    if (kbhit()) {&#xA;        //printf(&amp;quot;%c&amp;quot;,getch());&#xA;    }&#xA;    getch();&#xA;}&#xA;&#xA;&#xA;void fish() {&#xA;    line(fishx, fishy, fishx + 10, fishy - 5);&#xA;    line(fishx, fishy, fishx + 10, fishy + 5);&#xA;    line(fishx + 10, fishy - 5, fishx + 20, fishy);&#xA;    line(fishx + 20, fishy, fishx + 10, fishy + 5);&#xA;    line(fishx, fishy, fishx - 3, fishy - 3);&#xA;    line(fishx - 3, fishy - 3, fishx - 3, fishy + 3);&#xA;    line(fishx - 3, fishy + 3, fishx, fishy);&#xA;    setfillstyle(1, BROWN);&#xA;    floodfill(fishx + 2, fishy, 15);&#xA;    floodfill(fishx - 1, fishy, 15);&#xA;}&#xA;&#xA;void fishcatch() {&#xA;    line(fishx2, fishy2, fishx2 + 5, fishy2 + 10);&#xA;    line(fishx2, fishy2, fishx2 - 5, fishy2 + 10);&#xA;    line(fishx2 + 5, fishy2 + 10, fishx2, fishy2 + 20);&#xA;    line(fishx2 - 5, fishy2 + 10, fishx2, fishy2 + 20);&#xA;    line(fishx2, fishy2, fishx2 + 3, fishy2 + 23);&#xA;    line(fishx2, fishy2, fishx2 - 3, fishy2 + 23);&#xA;    line(fishx2 + 3, fishy2 + 23, fishx2 - 3, fishy2 + 23);&#xA;    setfillstyle(1, BROWN);&#xA;    floodfill(fishx2, fishy2 + 2, 15);&#xA;    floodfill(fishx2, fishy2 + 22, 15);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Sinking of Titanic</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-sinking-of-titanic/</link>
      <pubDate>Thu, 18 Nov 2010 18:47:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-sinking-of-titanic/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;&#xA;#include&amp;lt;conio.h&amp;gt; &#xA;#include&amp;lt;graphics.h&amp;gt;&#xA;void titanic(int, int);&#xA;void titanics(int, int);&#xA;void iceberg();&#xA;int poly[] = {&#xA;    0,&#xA;    300,&#xA;    640,&#xA;    300,&#xA;    640,&#xA;    480,&#xA;    0,&#xA;    480,&#xA;    0,&#xA;    300&#xA;};&#xA;int ix = 1, iy = 1;&#xA;void main() {&#xA;    int gdriver = DETECT, gmode, errorcode;&#xA;    int maxx, maxy;&#xA;    int xincr = 1, yincr = 1, i;&#xA;    int tempx = 400, tempy = 300;&#xA;    int sink = 0;&#xA;    initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;);&#xA;&#xA;    errorcode = graphresult();&#xA;    if (errorcode != grOk) {&#xA;        printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode));&#xA;        printf(&amp;quot;Press any key to halt:&amp;quot;);&#xA;        getch();&#xA;        exit(1);&#xA;    }&#xA;&#xA;    while (1) {&#xA;        delay(30);&#xA;        cleardevice();&#xA;        iceberg();&#xA;&#xA;        if (sink == 1) {&#xA;            tempy += yincr;&#xA;        } else {&#xA;            tempx -= xincr;&#xA;        }&#xA;&#xA;        if (tempx &amp;lt;= 120) {&#xA;            sink = 1;&#xA;            titanics(tempx, tempy);&#xA;        } else {&#xA;            titanic(tempx, tempy);&#xA;        }&#xA;&#xA;        if (tempy &amp;gt;= 600)&#xA;            break;&#xA;    }&#xA;    getch();&#xA;}&#xA;&#xA;void titanic(int x, int y) {&#xA;    setcolor(15);&#xA;    line(x, y, x + 100, y);&#xA;    line(x, y, x - 20, y - 20);&#xA;    line(x - 20, y - 20, x + 120, y - 20);&#xA;    line(x + 120, y - 20, x + 100, y);&#xA;    rectangle(x + 10, y - 30, x + 90, y - 20);&#xA;    rectangle(x + 20, y - 40, x + 80, y - 30);&#xA;    rectangle(x + 60, y - 70, x + 70, y - 40);&#xA;}&#xA;&#xA;void titanics(int x, int y) {&#xA;    setcolor(15);&#xA;    line(x, y, x + 100, y - 10);&#xA;    line(x, y, x - 20, y - 30);&#xA;    line(x - 20, y - 20, x + 120, y - 30);&#xA;    line(x + 120, y - 20, x + 100, y - 10);&#xA;    rectangle(x + 10, y - 30, x + 90, y - 10);&#xA;    rectangle(x + 20, y - 40, x + 80, y - 10);&#xA;    rectangle(x + 60, y - 70, x + 70, y - 10);&#xA;}&#xA;&#xA;void iceberg() {&#xA;    setcolor(BLUE);&#xA;    setfillstyle(1, BLUE);&#xA;    fillpoly(4, poly);&#xA;    setfillstyle(1, WHITE);&#xA;    fillellipse(0, 300, 100, 100);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Sunset in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-sunset-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:46:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-sunset-in-c/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;&#xA;#include&amp;lt;conio.h&amp;gt;&#xA;#include&amp;lt;graphics.h&amp;gt;&#xA;void main() {&#xA;    int gdriver = DETECT, gmode, errorcode;&#xA;    int midx, midy, radius = 40;&#xA;    initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;);&#xA;    errorcode = graphresult();&#xA;    if (errorcode != grOk) {&#xA;        printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode));&#xA;        printf(&amp;quot;Press any key to halt:&amp;quot;);&#xA;        getch();&#xA;        exit(1);&#xA;    }&#xA;    midx = getmaxx() / 2;&#xA;    while (radius &amp;gt;= 10) {&#xA;        cleardevice();&#xA;        line(0, 210, 160, 50);&#xA;        setcolor(WHITE);&#xA;        line(160, 50, 320, 210);&#xA;        line(320, 210, 480, 50);&#xA;        line(480, 50, 640, 210);&#xA;        line(0, 210, 640, 210);&#xA;&#xA;        arc(midx, 210, 45, 135, radius);&#xA;        setfillstyle(SOLID_FILL, YELLOW);&#xA;        floodfill(midx, 200, 15);&#xA;        setcolor(BLUE);&#xA;        setfillstyle(SOLID_FILL, LIGHTBLUE);&#xA;        floodfill(2, 2, 15);&#xA;        setfillstyle(SOLID_FILL, BROWN);&#xA;        floodfill(150, 150, 15);&#xA;        floodfill(550, 150, 15);&#xA;        setcolor(15);&#xA;        line(0, 400, 640, 300);&#xA;        setfillstyle(SOLID_FILL, BLUE);&#xA;        floodfill(2, 350, 15);&#xA;        setfillstyle(SOLID_FILL, GREEN);&#xA;        floodfill(2, 410, 15);&#xA;        delay(100);&#xA;        radius -= 1;&#xA;    }&#xA;    if (radius &amp;lt;= 10)&#xA;        cleardevice();&#xA;    getch();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Rotation of Fan in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-rotation-of-fan-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:44:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-rotation-of-fan-in-c/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include&amp;lt;graphics.h&amp;gt;&#xA;#include&amp;lt;stdio.h&amp;gt;&#xA;#include&amp;lt;stdlib.h&amp;gt;&#xA;#include&amp;lt;conio.h&amp;gt;&#xA;#include&amp;lt;dos.h&amp;gt;&#xA;#include&amp;lt;time.h&amp;gt;&#xA;#include&amp;lt;process.h&amp;gt;&#xA;#include&amp;lt;math.h&amp;gt;&#xA;void user();&#xA;float s1 = 0.0, s2 = 120.0, s3 = 240.0;&#xA;int midx, midy;&#xA;void main() {&#xA;    int gdriver = DETECT, gmode, errorcode;&#xA;    initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;C:/TC/BGI&amp;quot;);&#xA;    errorcode = graphresult();&#xA;    if (errorcode != grOk) {&#xA;        printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode));&#xA;        printf(&amp;quot;Press any key to halt:&amp;quot;);&#xA;        getch();&#xA;        exit(1);&#xA;    }&#xA;    midx = getmaxx() / 2;&#xA;    midy = getmaxy() / 2;&#xA;    loop:&#xA;        cleardevice();&#xA;    circle(midx, midy, 5);&#xA;    setcolor(10);&#xA;    line(midx, midy, (midx + 100 * cos(s1 * 3.14 / 180)), (midy - 95 * sin(s1 * 3.14 / 180)));&#xA;    line(midx, midy, (midx + 100 * cos(s2 * 3.14 / 180)), (midy - 95 * sin(s2 * 3.14 / 180)));&#xA;    line(midx, midy, (midx + 100 * cos(s3 * 3.14 / 180)), (midy - 95 * sin(s3 * 3.14 / 180)));&#xA;    if (!kbhit()) //check for keystroke&#xA;    {&#xA;        s1 += 10;&#xA;        s2 += 10;&#xA;        s3 += 10;&#xA;        delay(25);&#xA;        goto loop;&#xA;    } else //when key press&#xA;    {&#xA;        getch();&#xA;        exit(0);&#xA;    }&#xA;    getch();&#xA;    closegraph();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Sunrise in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-sunrise-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:44:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-sunrise-in-c/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;&#xA;#include&amp;lt;conio.h&amp;gt;&#xA;#include&amp;lt;graphics.h&amp;gt;&#xA;void main() {&#xA;    int gdriver = DETECT, gmode, errorcode;&#xA;    int midx, midy, radius = 10;&#xA;    initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;);&#xA;    errorcode = graphresult();&#xA;    if (errorcode != grOk) {&#xA;        printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode));&#xA;        printf(&amp;quot;Press any key to halt:&amp;quot;);&#xA;        getch();&#xA;        exit(1);&#xA;    }&#xA;    midx = getmaxx() / 2;&#xA;    while (radius &amp;lt;= 40) {&#xA;        cleardevice();&#xA;        line(0, 210, 160, 50);&#xA;        setcolor(WHITE);&#xA;        line(160, 50, 320, 210);&#xA;        line(320, 210, 480, 50);&#xA;        line(480, 50, 640, 210);&#xA;        line(0, 210, 640, 210);&#xA;&#xA;        arc(midx, 210, 45, 133, radius);&#xA;        setfillstyle(SOLID_FILL, YELLOW);&#xA;        floodfill(midx, 200, 15);&#xA;        setcolor(BLUE);&#xA;        setfillstyle(SOLID_FILL, LIGHTBLUE);&#xA;        floodfill(2, 2, 15);&#xA;        setfillstyle(SOLID_FILL, BROWN);&#xA;        floodfill(150, 150, 15);&#xA;        floodfill(550, 150, 15);&#xA;        setcolor(15);&#xA;        line(0, 400, 640, 300);&#xA;        setfillstyle(SOLID_FILL, BLUE);&#xA;        floodfill(2, 350, 15);&#xA;        setfillstyle(SOLID_FILL, GREEN);&#xA;        floodfill(2, 410, 15);&#xA;        delay(100);&#xA;        radius += 1;&#xA;    }&#xA;    getch();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Analog Clock in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-analog-clock-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:42:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-analog-clock-in-c/</guid>
      <description>&lt;pre&gt;&lt;code&gt;/*WAP to illustrate an analog clock*/&#xA;#include&amp;lt;graphics.h&amp;gt;&#xA;#include&amp;lt;stdio.h&amp;gt;&#xA;#include&amp;lt;stdlib.h&amp;gt;&#xA;#include&amp;lt;conio.h&amp;gt;&#xA;#include&amp;lt;dos.h&amp;gt;&#xA;#include&amp;lt;time.h&amp;gt;&#xA;#include&amp;lt;process.h&amp;gt;&#xA;#include&amp;lt;math.h&amp;gt;&#xA;void user();&#xA;float h, ma, hour, minute, sec, m, s;&#xA;void main() {&#xA;    int gdriver = DETECT, gmode, errorcode;&#xA;    struct time t;&#xA;    initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;C:/TC/BGI&amp;quot;);&#xA;    errorcode = graphresult();&#xA;    if (errorcode != grOk) {&#xA;        printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode));&#xA;        printf(&amp;quot;Press any key to halt:&amp;quot;);&#xA;        getch();&#xA;        exit(1);&#xA;    }&#xA;    loop:&#xA;        gettime( &amp;amp; t);&#xA;    hour = t.ti_hour;&#xA;    minute = t.ti_min;&#xA;    sec = t.ti_sec;&#xA;    if (hour &amp;gt; 11)&#xA;        hour = hour - 12;&#xA;    h = 90 - (hour * 30 + minute / 12);&#xA;    ma = 90 - (minute * 6);&#xA;    s = 90 - (sec * 6);&#xA;    m = minute - minute / 12;&#xA;    cleardevice();&#xA;    gotoxy(40, 15);&#xA;    printf(&amp;quot;%2.0f:%2.0f:%2.0f&amp;quot;, hour, minute, sec);&#xA;    gotoxy(10, 10);&#xA;    setcolor(15);&#xA;    circle(350, 250, 100);&#xA;    setfillstyle(1, 9);&#xA;    circle(350, 250, 2);&#xA;    circle(350, 250, 10);&#xA;    outtextxy(335, 200, &amp;quot;RADON&amp;quot;);&#xA;    setcolor(RED);&#xA;    outtextxy(346, 160, &amp;quot;12&amp;quot;);&#xA;    outtextxy(346, 340, &amp;quot;6&amp;quot;);&#xA;    outtextxy(425, 247, &amp;quot;3&amp;quot;);&#xA;    outtextxy(260, 247, &amp;quot;9&amp;quot;);&#xA;    setcolor(7);&#xA;    line(350, 250, (350 + 70 * cos(h * 3.14 / 180)), (250 - 70 * sin(h * 3.14 / 180))); //hour hand&#xA;    setcolor(10);&#xA;    line(350, 250, (350 + 90 * cos(s * 3.14 / 180)), (250 - 95 * sin(s * 3.14 / 180))); //second hand&#xA;    setcolor(9);&#xA;    line(350, 250, (350 + 60 * cos(ma * 3.14 / 180)), (250 - 90 * sin(ma * 3.14 / 180))); //minute hand&#xA;    setcolor(8);&#xA;    if (sec &amp;gt; 59) {&#xA;        sec = 0;&#xA;        m++;&#xA;        m = 6;&#xA;        s = s - 90;&#xA;        if (m &amp;gt; 59) {&#xA;            m = 0;&#xA;            h = 6;&#xA;        }&#xA;    }&#xA;    if (!kbhit()) //check for keystroke&#xA;    {&#xA;        sec++;&#xA;        s = s - 6;&#xA;        delay(1000);&#xA;        goto loop;&#xA;    } else //when key press&#xA;    {&#xA;        getch();&#xA;        exit(0);&#xA;    }&#xA;    getch();&#xA;    closegraph();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Mid-point Ellipse Drawing Algorithm</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-mid-point-ellipse-drawing-algorithm/</link>
      <pubDate>Thu, 18 Nov 2010 18:41:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-mid-point-ellipse-drawing-algorithm/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include&amp;lt;graphics.h&amp;gt;&#xA;#include&amp;lt;stdlib.h&amp;gt;&#xA;#include&amp;lt;stdio.h&amp;gt;&#xA;#include&amp;lt;conio.h&amp;gt;&#xA;void ellipsemid(int xcenter, int ycenter, int rx, int ry);&#xA;void point(int x, int xcenter, int ycenter, int y);&#xA;int maxx, maxy, xcenter, ycenter, rx, ry, grok;&#xA;&#xA;void main() {&#xA;    int gdriver = DETECT, errorcode, gmode, a, b, c, d;&#xA;&#xA;    initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;);&#xA;    errorcode = graphresult();&#xA;    if (errorcode != grOk) {&#xA;        printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode));&#xA;        printf(&amp;quot;Press any key to halt:&amp;quot;);&#xA;        getch();&#xA;        exit(1);&#xA;    }&#xA;&#xA;    clrscr();&#xA;    maxx = getmaxx();&#xA;    maxy = getmaxy();&#xA;    xcenter = 200;&#xA;    ycenter = 200;&#xA;    rx = 50;&#xA;    ry = 50;&#xA;    setcolor(4);&#xA;    ellipsemid(xcenter, ycenter, rx, ry);&#xA;    getch();&#xA;    //closegraph();&#xA;}&#xA;&#xA;&#xA;void ellipsemid(int xcenter, int ycenter, int rx, int ry) {&#xA;    int p, px, py, x, y, ry2, rx2, tworx2, twory2;&#xA;    ry2 = ry * ry;&#xA;    rx2 = rx * rx;&#xA;    twory2 = 2 * ry2;&#xA;    tworx2 = 2 * rx2;&#xA;    x = 0;&#xA;    y = ry;&#xA;    point(x, xcenter, ycenter, y);&#xA;    p = abs(ry2 - ry2 * ry + (0.25 * rx2));&#xA;    px = 0;&#xA;    py = twory2 * y;&#xA;    while (px &amp;lt; py) {&#xA;        x = x + 1;&#xA;        px = px + twory2;&#xA;        if (p &amp;gt;= 0) {&#xA;            y = y - 1;&#xA;            py = py - tworx2;&#xA;        }&#xA;        if (p &amp;lt; 0) {&#xA;            p = p + ry2 + px;&#xA;        } else {&#xA;            p = p + ry2 + px;&#xA;        }&#xA;        point(x, xcenter, ycenter, y);&#xA;    }&#xA;    p = abs(ry2 * (x + 6.5) * (x + 6.5) + rx2 * (y - 1) - rx2 * ry2);&#xA;    while (y &amp;gt; 0) {&#xA;        y = y - 1;&#xA;        py = py - tworx2;&#xA;        if (p &amp;lt; 0) {&#xA;            x = x + 1;&#xA;            px = px + twory2;&#xA;        }&#xA;        if (p &amp;gt; 0) {&#xA;            p = p + rx2 - py;&#xA;        } else {&#xA;            p = p + rx2 - py + px;&#xA;            point(x, xcenter, ycenter, y);&#xA;        }&#xA;    }&#xA;}&#xA;void point(int x, int xcenter, int ycenter, int y) {&#xA;    setcolor(4);&#xA;    putpixel(xcenter + x, ycenter + y, 4);&#xA;    putpixel(xcenter - x, ycenter + y, 4);&#xA;    putpixel(xcenter + x, ycenter - y, 4);&#xA;    putpixel(xcenter - x, ycenter - y, 4);&#xA;    putpixel(xcenter + x, ycenter + y, 4);&#xA;    putpixel(xcenter - x, ycenter + y, 4);&#xA;    putpixel(xcenter + x, ycenter - y, 4);&#xA;    putpixel(xcenter - x, ycenter - y, 4);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Line Clipping in C</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-11-18-line-clipping-in-c/</link>
      <pubDate>Thu, 18 Nov 2010 18:39:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-11-18-line-clipping-in-c/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;&#xA;#include&amp;lt;conio.h&amp;gt;&#xA;#include&amp;lt;graphics.h&amp;gt;&#xA;int xwmin, ywmin, xwmax, ywmax;&#xA;void rcode(int, int, int[]);&#xA;int check(int[], int[]);&#xA;void main() {&#xA;    int gdriver = DETECT, gmode, errorcode;&#xA;    int x1, y1, x2, y2, code1[4], code2[4], x, y, m;&#xA;    int point[2][2], p = 0;&#xA;    initgraph( &amp;amp; gdriver, &amp;amp; gmode, &amp;quot;c:/tc/bgi&amp;quot;);&#xA;    errorcode = graphresult();&#xA;    if (errorcode != grOk) {&#xA;        printf(&amp;quot;Graphics error: %s\n&amp;quot;, grapherrormsg(errorcode));&#xA;        printf(&amp;quot;Press any key to halt:&amp;quot;);&#xA;        getch();&#xA;        exit(1);&#xA;    }&#xA;    printf(&amp;quot;\n Enter the coordinates of window &amp;quot;);&#xA;    printf(&amp;quot;\n xwmin and ywmin: &amp;quot;);&#xA;    scanf(&amp;quot;%d%d&amp;quot;, &amp;amp; xwmin, &amp;amp; ywmin);&#xA;    printf(&amp;quot;\n xwmax and ywmax: &amp;quot;);&#xA;    scanf(&amp;quot;%d%d&amp;quot;, &amp;amp; xwmax, &amp;amp; ywmax);&#xA;    printf(&amp;quot;\n Enter the coordinates of line &amp;quot;);&#xA;    printf(&amp;quot;\n Enter the coordinate for the first end point of the line: &amp;quot;);&#xA;    scanf(&amp;quot;%d%d&amp;quot;, &amp;amp; x1, &amp;amp; y1);&#xA;    printf(&amp;quot;\n Enter the coordinate for the second end point of the line: &amp;quot;);&#xA;    scanf(&amp;quot;%d%d&amp;quot;, &amp;amp; x2, &amp;amp; y2);&#xA;    rcode(x1, y1, code1);&#xA;    rcode(x2, y2, code2);&#xA;&#xA;    if (check(code1, code2) == 1) {&#xA;        rectangle(xwmin, ywmin, xwmax, ywmax);&#xA;        printf(&amp;quot;1&amp;quot;);&#xA;    } else {&#xA;        m = (y2 - y1) / (x2 - x1);&#xA;        rectangle(xwmin, ywmin, xwmax, ywmax);&#xA;        line(x1, y1, x2, y2);&#xA;        setcolor(4);&#xA;        if (x1 &amp;lt; xwmin) {&#xA;            y = y1 + m * (xwmin - x1);&#xA;            x = xwmin;&#xA;            x1 = x;&#xA;            y1 = y;&#xA;        }&#xA;        if (x2 &amp;gt; xwmax) {&#xA;            y = y2 + m * (xwmax - x2);&#xA;            x = xwmax;&#xA;            x2 = x;&#xA;            y2 = y;&#xA;        }&#xA;        if (y1 &amp;lt; ywmin) {&#xA;            x = x1 + (ywmin - y1) / m;&#xA;            y = ywmin;&#xA;            x1 = x;&#xA;            y1 = y;&#xA;        }&#xA;        if (y2 &amp;gt; ywmax) {&#xA;            x = x2 + (ywmax - y2) / m;&#xA;            y = ywmax;&#xA;            x2 = x;&#xA;            y2 = y;&#xA;        }&#xA;&#xA;&#xA;        line(x1, y1, x2, y2);&#xA;&#xA;    }&#xA;    getch();&#xA;}&#xA;&#xA;int check(int code1[], int code2[]) {&#xA;    int flag = 0;&#xA;    if (code1[3] == 1 &amp;amp;&amp;amp; code2[3] == 1)&#xA;        flag = 1;&#xA;    if (code1[2] == 1 &amp;amp;&amp;amp; code2[2] == 1)&#xA;        flag = 1;&#xA;    if (code1[1] == 1 &amp;amp;&amp;amp; code2[1] == 1)&#xA;        flag = 1;&#xA;    if (code1[0] == 1 &amp;amp;&amp;amp; code2[0] == 1)&#xA;        flag = 1;&#xA;&#xA;    return flag;&#xA;}&#xA;&#xA;void rcode(int x, int y, int code[]) {&#xA;    if (y &amp;gt; ywmax) //bottom&#xA;        code[2] = 1;&#xA;    else&#xA;        code[2] = 0;&#xA;    if (y &amp;lt; ywmin) //top&#xA;        code[3] = 1;&#xA;    else&#xA;        code[3] = 0;&#xA;    if (x &amp;gt; xwmax) //right&#xA;        code[1] = 1;&#xA;    else&#xA;        code[1] = 0;&#xA;    if (x &amp;lt; xwmin) //left&#xA;        code[0] = 1;&#xA;    else&#xA;        code[0] = 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
