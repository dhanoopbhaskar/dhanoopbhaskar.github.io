<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Regex on The Insane Techie</title>
    <link>https://dhanoopbhaskar.github.io/tags/regex/</link>
    <description>Recent content in Regex on The Insane Techie</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 19 Jun 2020 14:07:00 +0530</lastBuildDate>
    <atom:link href="https://dhanoopbhaskar.github.io/tags/regex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Regex - Cheatsheet</title>
      <link>https://dhanoopbhaskar.github.io/posts/2020-06-19-regex/</link>
      <pubDate>Fri, 19 Jun 2020 14:07:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2020-06-19-regex/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Character classes&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;.               any character except newline&#xA;\w \d \s        word, digit, whitespace&#xA;\W \D \S        not word, digit, whitespace&#xA;[abc]           any of a, b, or c&#xA;[^abc]          not a, b, or c&#xA;[a-g]           character between a &amp;amp; g&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;Anchors&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;^abc$           start / end of the string&#xA;\b \B           word, not-word boundary&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;Escaped characters&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;\. \* \\        escaped special characters&#xA;\t \n \r        tab, linefeed, carriage return&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;Groups &amp;amp; Lookaround&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java - removing leading zeroes from a string</title>
      <link>https://dhanoopbhaskar.github.io/posts/2012-10-06-java-removing-leading-zeroes-from-a-string/</link>
      <pubDate>Sat, 06 Oct 2012 00:31:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2012-10-06-java-removing-leading-zeroes-from-a-string/</guid>
      <description>&lt;p&gt;Using Regular Expressions (regex)&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;String str = &amp;quot;00938&amp;quot;;&#xA;System.out.println(&amp;quot;*&amp;quot; + str.replaceFirst(&amp;quot;^0+&amp;quot;, &amp;quot;&amp;quot;) + &amp;quot;*&amp;quot;);&#x9;//*938*&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Suppose the string contains only zeroes, then the output will be a null string.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;String str = &amp;quot;0000000&amp;quot;;&#xA;System.out.println(&amp;quot;*&amp;quot; + str.replaceFirst(&amp;quot;^0+&amp;quot;, &amp;quot;&amp;quot;) + &amp;quot;*&amp;quot;); &#x9;//**&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;If you want a zero to remain in the above case use another form -&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;String str = &amp;quot;0000000&amp;quot;;&#xA;System.out.println(&amp;quot;*&amp;quot; + str.replaceFirst(&amp;quot;^0+(?!$)&amp;quot;, &amp;quot;&amp;quot;) + &amp;quot;*&amp;quot;); &#x9;//*0*&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The negative lookahead &lt;code&gt;(?!$)&lt;/code&gt; ensures that the entire string is not matched with the regular expression &lt;code&gt;^0+&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
