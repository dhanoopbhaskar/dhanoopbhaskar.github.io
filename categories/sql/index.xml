<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on The Insane Techie</title>
    <link>https://dhanoopbhaskar.github.io/categories/sql/</link>
    <description>Recent content in SQL on The Insane Techie</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 10 Jan 2010 00:29:00 +0530</lastBuildDate>
    <atom:link href="https://dhanoopbhaskar.github.io/categories/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL- UNIVERSITY EXAM REGISTRATION SYSTEM</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-university-exam-registration-system/</link>
      <pubDate>Sun, 10 Jan 2010 00:29:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-university-exam-registration-system/</guid>
      <description>&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;CREATE TABLE&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;create table application(slno number(5) primary key,student_name char(15),branch char(7),college char(15),date_apply date);&#xA;&#xA;create table university(student_name char(15),branch char(7) check( branch in(&#39;CS&#39;,&#39;IT&#39;,&#39;EC&#39;)),college char(15));&#xA;&#xA;create table register_nos(regno number(5),student_name char(15),branch char(7),college char(15));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;UNIVERSITY DATABASE&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;insert into university values(&#39;&amp;amp;student_name&#39;,&#39;&amp;amp;branch&#39;,&#39;&amp;amp;college&#39;);&#xA;&#xA;&#xA;SQL&amp;gt; insert into university values(&#39;&amp;amp;student_name&#39;,&#39;&amp;amp;branch&#39;,&#39;&amp;amp;college&#39;);&#xA;&#xA;Enter value for student_name: Kuttoos&#xA;&#xA;Enter value for branch: IT&#xA;&#xA;Enter value for college: UCE&#xA;&#xA;old   1: insert into university values(&#39;&amp;amp;student_name&#39;,&#39;&amp;amp;branch&#39;,&#39;&amp;amp;college&#39;)&#xA;&#xA;new   1: insert into university values(&#39;Kuttoos&#39;,&#39;IT&#39;,&#39;UCE&#39;)&#xA;&#xA;1 row created.&#xA;&#xA;SQL&amp;gt; /&#xA;&#xA;Enter value for student_name: Tuttu&#xA;&#xA;Enter value for branch: CS&#xA;&#xA;Enter value for college: VJC&#xA;&#xA;old   1: insert into university values(&#39;&amp;amp;student_name&#39;,&#39;&amp;amp;branch&#39;,&#39;&amp;amp;college&#39;)&#xA;&#xA;new   1: insert into university values(&#39;Tuttu&#39;,&#39;CS&#39;,&#39;VJC&#39;)&#xA;&#xA;1 row created.&#xA;&#xA;SQL&amp;gt; /&#xA;&#xA;Enter value for student_name: Tintumon&#xA;&#xA;Enter value for branch: CS&#xA;&#xA;Enter value for college: UCE&#xA;&#xA;old   1: insert into university values(&#39;&amp;amp;student_name&#39;,&#39;&amp;amp;branch&#39;,&#39;&amp;amp;college&#39;)&#xA;&#xA;new   1: insert into university values(&#39;Tintumon&#39;,&#39;CS&#39;,&#39;UCE&#39;)&#xA;&#xA;1 row created.&#xA;&#xA;SQL&amp;gt; /&#xA;&#xA;Enter value for student_name: Ammu&#xA;&#xA;Enter value for branch: EC&#xA;&#xA;Enter value for college: UCE&#xA;&#xA;old   1: insert into university values(&#39;&amp;amp;student_name&#39;,&#39;&amp;amp;branch&#39;,&#39;&amp;amp;college&#39;)&#xA;&#xA;new   1: insert into university values(&#39;Ammu&#39;,&#39;EC&#39;,&#39;UCE&#39;)&#xA;&#xA;1 row created.&#xA;&#xA;SQL&amp;gt; select * from university;&#xA;&#xA;&#xA;&#xA;STUDENT_NAME      BRANCH        COLLEGE&#xA;--------------------------------------------&#xA;Kuttoos           IT            UCE&#xA;Tuttu             CS            VJC&#xA;Tintumon          CS            UCE&#xA;Ammu              EC            UCE&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL- RECRUITMENT DATABASE</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-recruitment-database/</link>
      <pubDate>Sun, 10 Jan 2010 00:27:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-recruitment-database/</guid>
      <description>&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;CREATE TABLE&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;create table registration(regno number(6) primary key,name char(15),college char(15),date_of_reg date,degree char(10));&#xA;&#xA;create table company_details(company_name char(15) primary key,salary number(8));&#xA;&#xA;create table result(regno number(6) references registration(regno),marks number(5),selected char(3) default &#39;N&#39;);&#xA;&#xA;create table agency_income_details(company_name char(15),agency_profit number(10,2));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;PROCEDURE&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;create or replace procedure insertreg (pname char,pcoll char,pdgr char) is&#xA;&#x9;cname char(15);&#xA;&#x9;no number(6);&#xA;&#x9;r number(6);&#xA;&#x9;cnt number(2);&#xA;begin&#xA;&#x9;cname:=&#39;&amp;amp;cname&#39;;&#xA;&#x9;select max(regno) into no from registration;&#xA;&#xA;    if no is null then&#xA;    &#x9;r:=1;&#xA;    else&#xA;    &#x9;r:=no+1;&#xA;    end if;&#xA;&#xA;    insert into registration values(r,pname,pcoll,sysdate,pdgr);&#xA;    dbms_output.put_line(&#39; Registration success, your registration number is &#39;||r);&#xA;    select COUNT(company_name) into cnt from company_details where company_name=cname;&#xA;&#xA;    if cnt=0 then&#xA;    &#x9;insert into company_details values(cname,&amp;amp;salary);&#xA;    end if;&#xA;end;&#xA;&#xA;/&#xA;&#xA;Enter value for cname: Wipro&#xA;&#xA;old   7: cname:=&#39;&amp;amp;cname&#39;;&#xA;&#xA;new   7: cname:=&#39;Wipro&#39;;&#xA;&#xA;Enter value for salary: 25000&#xA;&#xA;old  18:  insert into company_details values(cname,&amp;amp;salary);&#xA;&#xA;new  18:  insert into company_details values(cname,25000);&#xA;&#xA;Procedure created.&#xA;&#xA;COMPANY_NAME                SALARY&#xA;----------------------------------------------------&#xA;Wipro                       25000&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL- RAILWAY RESERVATION SYSTEM</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-railway-reservation-system/</link>
      <pubDate>Sun, 10 Jan 2010 00:25:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-railway-reservation-system/</guid>
      <description>&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;CREATE TABLE&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;create table train_details(train_name char(15) primary key,total_seats number(3),reserved_seats number(3));&#xA;&#xA;create table reservation_status(train_name char(15) references train_details(train_name),seat_id number(3),reserved char(2) check (reserved in(&#39;y&#39;,&#39;n&#39;)),customer_name char(15));&#x9; &#xA;&#xA;create table waiting_list(slno number(3),customer_name char(15) primary key,train_name char(15) references train_details(train_name));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;ENTER TRAIN DETAILS&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;&#xA;declare&#xA;&#xA;&#x9;tname char(15);&#xA;&#x9;tot number(3);&#xA;&#x9;resv number(3);&#xA;&#x9;cursor cur is select * from train_details;&#xA;&#xA;begin&#xA;&#xA;&#x9;insert into train_details values(&#39;&amp;amp;train_name&#39;,&amp;amp;total_seats,0);&#xA;&#xA;&#x9;open cur;&#xA;&#xA;&#x9;loop&#xA;&#x9;&#x9;fetch cur into tname,tot,resv;&#xA;&#x9;&#x9;if cur%found then&#xA;&#x9;&#x9;&#x9;for i in 1..tot&#xA;&#x9;&#x9;&#x9;loop&#xA;&#x9;&#x9;&#x9;&#x9;insert into reservation_status values(tname,i,&#39;n&#39;,null);&#xA;&#x9;&#x9;&#x9;end loop;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;exit;&#xA;&#x9;&#x9;end if;&#xA;&#x9;end loop;&#xA;&#xA;&#x9;commit;&#xA;&#x9;close cur;&#xA;end;&#xA;&#xA;/&#xA;&#xA;Enter value for train_name: AA&#xA;&#xA;Enter value for total_seats: 3&#xA;&#xA;old   7: insert into train_details values(&#39;&amp;amp;train_name&#39;,&amp;amp;total_seats,0);&#xA;&#xA;new   7: insert into train_details values(&#39;AA&#39;,3,0);&#xA;&#xA;PL/SQL procedure successfully completed.&#xA;&#xA;SQL&amp;gt; /&#xA;&#xA;Enter value for train_name: BB&#xA;&#xA;Enter value for total_seats: 2&#xA;&#xA;old   7: insert into train_details values(&#39;&amp;amp;train_name&#39;,&amp;amp;total_seats,0);&#xA;&#xA;new   7: insert into train_details values(&#39;BB&#39;,2,0);&#xA;&#xA; &#xA;&#xA;PL/SQL procedure successfully completed.&#xA;&#xA; &#xA;&#xA;SQL&amp;gt; select * from train_details;&#xA;&#xA;TRAIN_NAME                        TOTAL_SEATS           RESERVED_SEATS&#xA;--------------------------------------------------------------------------------------&#xA;AA                                3                     0&#xA;BB                                2                     0&#xA;&#xA; &#xA;&#xA;SQL&amp;gt; select * from  reservation_status;&#xA;&#xA;TRAIN_NAME                        SEAT_ID         RE       CUSTOMER_NAME&#xA;--------------------------------------------------------------------------------------&#xA;AA                                1               n&#xA;AA                                2               n&#xA;AA                                3               n&#xA;BB                                1               n&#xA;BB                                2               n&#xA;&#xA;5 rows selected.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL- LIBRARY MANAGEMENT SYSTEM</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-library-management-system/</link>
      <pubDate>Sun, 10 Jan 2010 00:22:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-library-management-system/</guid>
      <description>&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;CREATE TABLE&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;create table book_rec(book_name char(15) primary key,author char(15),total_copies number(5),available_copies number(5));&#xA;&#xA;create table membership_rec(mem_id number(5) primary key,mem_name char(15),no_of_books_taken number(2));&#xA;&#xA;create table book_details(book_id number(5) primary key,book_name char(15) references book_rec(book_name),mem_id number(5));&#xA;&#xA;create table circulation_rec(book_id number(5) references book_details(book_id),mem_id number(5) references membership_rec(mem_id),issue_date date,return_date date);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;ADD A NEW BOOK&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;declare&#xA;&#x9;bknam char(15);&#xA;&#x9;auth char(15);&#xA;&#x9;tot number(5);&#xA;&#x9;id number(5);&#xA;&#x9;no number(5);&#xA;&#x9;i number(3);&#xA;begin&#xA;&#xA;&#x9;bknam:=&#39;&amp;amp;bknam&#39;;&#xA;&#x9;auth:=&#39;&amp;amp;auth&#39;;&#xA;&#x9;tot:=&amp;amp;tot;&#xA;&#x9;insert into book_rec values(bknam,auth,tot,tot);&#xA;&#x9;for i in 1..tot&#xA;&#x9;loop&#xA;&#x9;&#x9;select MAX(book_id) into no from book_details;&#xA;&#x9;&#x9;if no is not null then&#xA;&#x9;&#x9;&#x9;id:=no+1;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;id:=1;&#xA;&#x9;&#x9;end if;&#xA;&#x9;&#x9;insert into book_details values(id,bknam,null);&#xA;&#x9;end loop;&#xA;end;&#xA;&#xA;/&#xA;&#xA;Enter value for bknam: DCD&#xA;&#xA;old   9: bknam:=&#39;&amp;amp;bknam&#39;;&#xA;&#xA;new   9: bknam:=&#39;DCD&#39;;&#xA;&#xA;Enter value for auth: Mano&#xA;&#xA;old  10: auth:=&#39;&amp;amp;auth&#39;;&#xA;&#xA;new  10: auth:=&#39;Mano&#39;;&#xA;&#xA;Enter value for tot: 3&#xA;&#xA;old  11: tot:=&amp;amp;tot;&#xA;&#xA;new  11: tot:=3;&#xA;&#xA;&#xA;PL/SQL procedure successfully completed.&#xA;&#xA;&#xA;SQL&amp;gt; /&#xA;&#xA;Enter value for bknam: OS&#xA;&#xA;old   9: bknam:=&#39;&amp;amp;bknam&#39;;&#xA;&#xA;new   9: bknam:=&#39;OS&#39;;&#xA;&#xA;Enter value for auth: Silber&#xA;&#xA;old  10: auth:=&#39;&amp;amp;auth&#39;;&#xA;&#xA;new  10: auth:=&#39;Silber&#39;;&#xA;&#xA;Enter value for tot: 2&#xA;&#xA;old  11: tot:=&amp;amp;tot;&#xA;&#xA;new  11: tot:=2;&#xA;&#xA;&#xA;PL/SQL procedure successfully completed.&#xA;&#xA;&#xA;SQL&amp;gt; select * from book_rec;&#xA;&#xA;&#xA;BOOK_NAME                        AUTHOR                  TOTAL_COPIES         AVAILABLE_COPIES&#xA;--------------------------------------------------------------------------------------------------------------&#xA;DCD                              Mano                    3                    3&#xA;OS                               Silber                  2                    2&#xA;&#xA;&#xA;SQL&amp;gt; select * from book_details;&#xA;&#xA;BOOK_ID        BOOK_NAME                        MEM_ID&#xA;&#xA;--------------------------------------------------------------&#xA;1               DCD&#xA;2               DCD&#xA;3               DCD&#xA;4               OS&#xA;5               OS&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL- HOSPITAL MANAGEMENT</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-hospital-management/</link>
      <pubDate>Sun, 10 Jan 2010 00:19:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-hospital-management/</guid>
      <description>&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;CREATE TABLE&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;create table doctors_details(doc_id number(3),name char(15),specialization char(15) primary key check(specialization in(&#39;ENT&#39;,&#39;GASTRO&#39;,&#39;CARDIO&#39;,&#39;OPTHAL&#39;, &#39;ORTHO&#39;, &#39;PSYCHO&#39;)),fees number(8,2));&#xA;&#xA;create table register(regno number(5) primary key,name char(15),age number(3),sex char(3) check(sex in(&#39;M&#39;,&#39;F&#39;)),address char(20),date_reg date,category char(15) references doctors_details(specialization));&#xA;&#xA;create table pat_doc_details(name char(15),doc_name char(15));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;DOCTORS_DETAILS&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#xA;&#xA;insert into doctors_details values(&amp;amp;doc_id,&#39;&amp;amp;name&#39;,&#39;&amp;amp;specialization&#39;,&amp;amp;fees);&#xA;&#xA;&#xA;SQL&amp;gt; insert into doctors_details values(&amp;amp;doc_id,&#39;&amp;amp;name&#39;,&#39;&amp;amp;specialization&#39;,&amp;amp;fees);&#xA;&#xA;Enter value for doc_id: 1&#xA;&#xA;Enter value for name: Tintumon&#xA;&#xA;Enter value for specialization: ENT&#xA;&#xA;Enter value for fees: 100&#xA;&#xA;old   1: insert into doctors_details values(&amp;amp;doc_id,&#39;&amp;amp;name&#39;,&#39;&amp;amp;specialization&#39;,&amp;amp;fees)&#xA;&#xA;new   1: insert into doctors_details values(1,&#39;Tintumon&#39;,&#39;ENT&#39;,100)&#xA;&#xA;1 row created.&#xA;&#xA;SQL&amp;gt; /&#xA;&#xA;Enter value for doc_id: 2&#xA;&#xA;Enter value for name: Kuttoos&#xA;&#xA;Enter value for specialization: CARDIO&#xA;&#xA;Enter value for fees: 500&#xA;&#xA;old   1: insert into doctors_details values(&amp;amp;doc_id,&#39;&amp;amp;name&#39;,&#39;&amp;amp;specialization&#39;,&amp;amp;fees)&#xA;&#xA;new   1: insert into doctors_details values(2,&#39;Kuttoos&#39;,&#39;CARDIO&#39;,500)&#xA;&#xA;1 row created.&#xA;&#xA;&#xA;SQL&amp;gt; select * from doctors_details;&#xA;&#xA;DOC_ID        NAME               SPECIALIZATION       FEES&#xA;-----------------------------------------------------------------------------------&#xA;1             Tintumon           ENT                  100&#xA;2             Kuttoos            CARDIO               500&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL- bank account</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-bank-account/</link>
      <pubDate>Sun, 10 Jan 2010 00:17:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-bank-account/</guid>
      <description>&lt;pre&gt;&lt;code&gt;SQL&amp;gt; create table ACCTMASTER(accno INT primary key,name char(25),balance number(10));&#xA;&#xA;SQL&amp;gt; create table ACCTTRAN(accno INT references ACCTMASTER(accno),tran_date date default sysdate,deb_cred char(7),flag char(2) default &#39;N&#39;,amount number(10));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;SQL&amp;gt; insert into ACCTMASTER values(&amp;amp;accno,&#39;&amp;amp;name&#39;,&amp;amp;balance);&#xA;&#xA;Enter value for accno: 101&#xA;&#xA;Enter value for name: Tuttu&#xA;&#xA;Enter value for balance: 10000&#xA;&#xA;old   1: insert into ACCTMASTER values(&amp;amp;accno,&#39;&amp;amp;name&#39;,&amp;amp;balance)&#xA;&#xA;new   1: insert into ACCTMASTER values(101,&#39;Tuttu&#39;,10000)&#xA;&#xA;1 row created.&#xA;&#xA;SQL&amp;gt; /&#xA;&#xA;Enter value for accno: 102&#xA;&#xA;Enter value for name: Tintumon&#xA;&#xA;Enter value for balance: 19000&#xA;&#xA;old   1: insert into ACCTMASTER values(&amp;amp;accno,&#39;&amp;amp;name&#39;,&amp;amp;balance)&#xA;&#xA;new   1: insert into ACCTMASTER values(102,&#39;Tintumon&#39;,19000)&#xA;&#xA;1 row created.&#xA;&#xA;&#xA;SQL&amp;gt; select * from ACCTMASTER;&#xA;&#xA;ACCNO           NAME                        BALANCE&#xA;-------------------------------------------------------------&#xA;101             Tuttu                       10000&#xA;102             Tintumon                    19000&#xA;&#xA;&#xA;SQL&amp;gt; insert into ACCTTRAN values(&amp;amp;accno,&#39;&amp;amp;tran_date&#39;,&#39;&amp;amp;deb_cred&#39;,&#39;&amp;amp;flag&#39;,&amp;amp;amt);&#xA;&#xA;Enter value for accno: 101&#xA;&#xA;Enter value for tran_date: 05-JAN-10&#xA;&#xA;Enter value for deb_cred: Debit&#xA;&#xA;Enter value for flag: n&#xA;&#xA;Enter value for amt: 1000&#xA;&#xA;old   1: insert into ACCTTRAN values(&amp;amp;accno,&#39;&amp;amp;tran_date&#39;,&#39;&amp;amp;deb_cred&#39;,&#39;&amp;amp;flag&#39;,&amp;amp;amt)&#xA;&#xA;new   1: insert into ACCTTRAN values(101,&#39;05-JAN-10&#39;,&#39;Debit&#39;,&#39;n&#39;,1000)&#xA;&#xA;1 row created.&#xA;&#xA;&#xA;SQL&amp;gt; /&#xA;&#xA;Enter value for accno: 102&#xA;&#xA;Enter value for tran_date: 05-JAN-10&#xA;&#xA;Enter value for deb_cred: Credit&#xA;&#xA;Enter value for flag: n&#xA;&#xA;Enter value for amt: 1000&#xA;&#xA;old   1: insert into ACCTTRAN values(&amp;amp;accno,&#39;&amp;amp;tran_date&#39;,&#39;&amp;amp;deb_cred&#39;,&#39;&amp;amp;flag&#39;,&amp;amp;amt)&#xA;&#xA;new   1: insert into ACCTTRAN values(102,&#39;05-JAN-10&#39;,&#39;Credit&#39;,&#39;n&#39;,1000)&#xA;&#xA;1 row created.&#xA;&#xA;&#xA;SQL&amp;gt; select * from ACCTTRAN;&#xA;&#xA;ACCNO       TRAN_DATE       DEB_CRE       FL         AMOUNT&#xA;-------------------------------------------------------------------------------------&#xA;101         05-JAN-10       Debit         n          1000&#xA;102         05-JAN-10       Credit        n          1000&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL- student database</title>
      <link>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-student-database/</link>
      <pubDate>Sun, 10 Jan 2010 00:13:00 +0530</pubDate>
      <guid>https://dhanoopbhaskar.github.io/posts/2010-01-10-sql-student-database/</guid>
      <description>&lt;pre&gt;&lt;code&gt;create a student database (rollno,name,tot_marks,trade). Write a PL/SQL program to create student details for each trade adding an extra field &#39;rank&#39; which includes the ranking details of each student. Also print top 3 rankers.&#xA;&#xA;create table student(rollno INT,name char(25),tot_marks number(10),trade char(25));&#xA;&#xA;create table IT(rollno INT,name char(25),tot_marks number(10),trade char(25),rank number(3));&#xA;&#xA;create table CS(rollno INT,name char(25),tot_marks number(10),trade char(25),rank number(3));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;declare&#xA;&#x9;rno INT;&#xA;&#x9;nam char(25);&#xA;&#x9;tot number(10);&#xA;&#x9;trd char(25);&#xA;&#x9;rnk number(3);&#xA;&#x9;mx number(10);&#xA;&#x9;cursor curr is select * from student;&#xA;&#x9;cursor cit is select * from IT;&#xA;&#x9;cursor ccs is select * from CS;&#xA;&#x9;i number(4);&#xA;begin&#xA;&#x9;delete from IT;&#xA;&#x9;delete from CS;&#xA;&#x9;open curr;&#xA;&#x9;loop&#xA;&#x9;&#x9;fetch curr into rno,nam,tot,trd;&#xA;&#x9;&#x9;if(curr%found) then&#xA;&#x9;&#x9;&#x9;if trd=&#39;IT&#39; then&#xA;&#x9;&#x9;&#x9;&#x9;insert into IT values(rno,nam,tot,trd,rnk);&#xA;&#x9;&#x9;&#x9;elsif trd=&#39;CS&#39; then&#xA;&#x9;&#x9;&#x9;&#x9;insert into CS values(rno,nam,tot,trd,rnk);&#xA;&#x9;&#x9;&#x9;end if;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;exit;&#xA;&#x9;&#x9;end if;&#xA;&#x9;end loop;&#xA;&#x9;commit;&#xA;&#x9;close curr;&#xA;&#xA;&#x9;i:=1;&#xA;&#x9;update CS set rank=null;&#xA;&#x9;open ccs;&#xA;&#x9;loop&#xA;&#x9;&#x9;fetch ccs into rno,nam,tot,trd,rnk;&#xA;&#x9;&#x9;if(ccs%found) then&#xA;&#x9;&#x9;&#x9;select max(tot_marks) into mx from CS where rank is null;&#xA;&#x9;&#x9;&#x9;update CS set rank=i where tot_marks=mx;&#xA;&#x9;&#x9;&#x9;i:=i+1;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;exit;&#xA;&#x9;&#x9;end if;&#xA;&#x9;end loop;&#xA;&#x9;commit;&#xA;&#x9;close ccs;&#xA;&#xA;&#x9;i:=1;&#xA;&#x9;update IT set rank=null;&#xA;&#x9;open cit;&#xA;&#x9;loop&#xA;&#x9;&#x9;fetch cit into rno,nam,tot,trd,rnk;&#xA;&#x9;&#x9;if(cit%found) then&#xA;&#x9;&#x9;&#x9;select max(tot_marks) into mx from IT where rank is null;&#xA;&#x9;&#x9;&#x9;update IT set rank=i where tot_marks=mx;&#xA;&#x9;&#x9;&#x9;i:=i+1;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;exit;&#xA;&#x9;&#x9;end if;&#xA;&#x9;end loop;&#xA;&#x9;commit;&#xA;&#x9;close cit;&#xA;end;&#xA;&#xA;&#xA;select * from IT order by rank;&#xA;&#xA;select * from CS order by rank;&#xA;&#xA;&#xA;SQL&amp;gt; select * from student;&#xA;&#xA;ROLLNO      NAME                      TOT_MARKS     TRADE&#xA;----------------------------------------------------------------------------&#xA;1           Ammu                      555           IT&#xA;2           Appu                      556           IT&#xA;1           Tinto                     585           CS&#xA;2           Tintumon                  598           CS&#xA;3           Kuttoos                   542           IT&#xA;3           Tuttu                     562           CS&#xA;&#xA;6 rows selected.&#xA;&#xA;&#xA;SQL&amp;gt; select * from IT;&#xA;&#xA;ROLLNO        NAME             TOT_MARKS              TRADE                     RANK&#xA;----------------------------------------------------------------------------------------------------------&#xA;1             Ammu             555                    IT                        2&#xA;2             Appu             556                    IT                        1&#xA;3             Kuttoos          542                    IT                        3&#xA;&#xA;&#xA;SQL&amp;gt; select * from CS;&#xA;&#xA;ROLLNO        NAME             TOT_MARKS              TRADE                     RANK&#xA;------------------------------------------------------------------------------------------------------&#xA;1             Tinto            585                    CS                        2&#xA;2             Tintumon         598                    CS                        1&#xA;3             Tuttu            562                    CS                        3&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
