<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software engineering on The Insane Techie</title>
    <link>https://dhanoopbhaskar.github.io/categories/software-engineering/</link>
    <description>Recent content in software engineering on The Insane Techie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 31 Aug 2013 15:33:00 +0530</lastBuildDate>
    
	<atom:link href="https://dhanoopbhaskar.github.io/categories/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Software Design Pattern</title>
      <link>https://dhanoopbhaskar.github.io/blog/2013-08-31-software-design-pattern/</link>
      <pubDate>Sat, 31 Aug 2013 15:33:00 +0530</pubDate>
      
      <guid>https://dhanoopbhaskar.github.io/blog/2013-08-31-software-design-pattern/</guid>
      <description>A software design pattern is a general reusable solution to a commonly occurring problem within a given context in software design. A design pattern is not a finished or completed design. It is actually a description or template for solution to a problem.
 Design patterns are of many types, such as:
 Algorithm strategy patterns Computational design patterns Execution patterns Implementation strategy patterns Structural design patterns  Read more about design patterns here&amp;hellip;</description>
    </item>
    
  </channel>
</rss>